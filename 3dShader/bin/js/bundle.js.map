{
  "version": 3,
  "sources": ["../../src/mesh/VertexObject.ts", "../../src/mesh/MeshData.ts", "../../src/mesh/BoxMesh.ts", "../../src/ui/layaMaxUI.ts", "../../src/shader/UVBlurMatrial.ts", "../../src/shader/UVBlurShader.ts", "../../src/script/GameUI.ts", "../../src/GameConfig.ts", "../../src/Main.ts"],
  "sourcesContent": ["export default class VertexObject {\n    public x: number = 0;\n    public y: number = 0;\n    public z: number = 0;\n\n    // \u6CD5\u5411\u91CF\n    public nx: number = 0;\n    public ny: number = 0;\n    public nz: number = 0;\n\n    // uv\n    public u: number = 0;\n    public v: number = 0;\n\n    // color\n    public r: number = 0;\n    public g: number = 0;\n    public b: number = 0;\n    public a: number = 0;\n}", "import VertexObject from \"./VertexObject\";\n\nexport default class MeshData {\n    // \u9876\u70B9\u6570\u7EC4\n    public vertexs: VertexObject[] = [];\n    // \u4E09\u89D2\u5F62\u6570\u636E\n    public triangle: number[] = [];\n\n    public createMesh(): Laya.Mesh {\n        let vertexDeclaration = Laya.VertexMesh.getVertexDeclaration(\"POSITION,NORMAL,UV,COLOR\");\n        let vbArray: number[] = [];\n        for (let i = 0; i < this.vertexs.length; i++) {\n            let vertex: VertexObject = this.vertexs[i];\n            vbArray.push(\n                vertex.x,\n                vertex.y,\n                vertex.z,\n                vertex.nx,\n                vertex.ny,\n                vertex.nz,\n                vertex.u,\n                vertex.v,\n                vertex.r,\n                vertex.g,\n                vertex.b,\n                vertex.a\n            )\n        }\n        let vertices = new Float32Array(vbArray);\n        let indices = new Uint16Array(this.triangle);\n        return Laya.PrimitiveMesh[\"_createMesh\"](vertexDeclaration, vertices, indices);\n    }\n\n    public addVertex(x: number, y: number, z: number, nx: number, ny: number, nz: number, u: number, v: number, r: number, g: number, b: number, a: number): void {\n        let vertex: VertexObject = new VertexObject();\n        vertex.x = x;\n        vertex.y = y;\n        vertex.z = z;\n\n        vertex.nx = nx;\n        vertex.ny = ny;\n        vertex.nz = nz;\n\n        vertex.u = u;\n        vertex.v = v;\n\n        vertex.r = r;\n        vertex.g = g;\n        vertex.b = b;\n        vertex.a = a;\n\n        this.vertexs.push(vertex);\n\n    }\n\n    public combineMesh(list: MeshData[]): MeshData {\n        for (let i = 0; i < list.length; i++) {\n            let data: MeshData = list[i];\n            let begin: number = this.vertexs.length;\n            for (let j: number = 0; j < data.vertexs.length; j++) {\n                this.vertexs.push(data.vertexs[j]);\n            }\n            for (let j: number = 0; j < data.triangle.length; j++) {\n                this.triangle.push(data.triangle[j]+begin);\n            }\n        }\n        return this;\n    }\n}", "import MeshData from \"./MeshData\";\n\nexport default class BoxMesh{\n    \n    static createBox(long = 1, \n                     height = 1, \n                     width = 1):MeshData {\n\n        var halfLong = long / 2;\n        var halfHeight = height / 2;\n        var halfWidth = width / 2;\n\n        var boxMesh:MeshData = new MeshData();\n        \n        //\u4E0A\u9762\n        boxMesh.addVertex(-halfLong, halfHeight, -halfWidth, 0, 1, 0, 0, 0 , 0,0,0,1);\n        boxMesh.addVertex(halfLong, halfHeight, -halfWidth, 0, 1, 0, 1, 0 , 0,0,0,1);\n        boxMesh.addVertex(halfLong, halfHeight, halfWidth, 0, 1, 0, 1, 1 , 0,0,0,1);\n        boxMesh.addVertex(-halfLong, halfHeight, halfWidth, 0, 1, 0, 0, 1 , 0,0,0,1);\n        //\u4E0B\u9762\n        boxMesh.addVertex(-halfLong, -halfHeight, -halfWidth, 0, -1, 0, 0, 0 , 0,0,0,1);\n        boxMesh.addVertex(halfLong, -halfHeight, -halfWidth, 0, -1, 0, 1, 0 , 0,0,0,1);\n        boxMesh.addVertex(halfLong, -halfHeight, halfWidth, 0, -1, 0, 1, 0 , 0,0,0,1);\n        boxMesh.addVertex(-halfLong, -halfHeight, halfWidth, 0, -1, 0, 0, 0 , 0,0,0,1);\n        //\u53F3\u9762\n        boxMesh.addVertex(-halfLong, halfHeight, -halfWidth, -1, 0, 0, 0, 0 , 0,0,0,1);\n        boxMesh.addVertex(-halfLong, halfHeight, halfWidth, -1, 0, 0, 1, 0 , 0,0,0,1);\n        boxMesh.addVertex(-halfLong, -halfHeight, halfWidth, -1, 0, 0, 1, 0 , 0,0,0,1);\n        boxMesh.addVertex(-halfLong, -halfHeight, -halfWidth, -1, 0, 0, 0, 0 , 0,0,0,1);\n        //\u5DE6\u9762\n        boxMesh.addVertex(halfLong, halfHeight, -halfWidth, 1, 0, 0, 1, 0 , 0,0,0,1);\n        boxMesh.addVertex(halfLong, halfHeight, halfWidth, 1, 0, 0, 0, 0 , 0,0,0,1);\n        boxMesh.addVertex(halfLong, -halfHeight, halfWidth, 1, 0, 0, 0, 0 , 0,0,0,1);\n        boxMesh.addVertex(halfLong, -halfHeight, -halfWidth, 1, 0, 0, 1, 0 , 0,0,0,1);\n\n        //\u524D\u9762\n        boxMesh.addVertex(-halfLong, halfHeight, halfWidth, 0, 0, 1, 0, 0 , 1,0,0,1);\n        boxMesh.addVertex(halfLong, halfHeight, halfWidth, 0, 0, 1, 1, 0 , 0,1,0,0);\n        boxMesh.addVertex(halfLong, -halfHeight, halfWidth, 0, 0, 1, 1, 1 , 0,0,1,1);\n        boxMesh.addVertex(-halfLong, -halfHeight, halfWidth, 0, 0, 1, 0, 1 , 1,1,0,1);\n\n        \n        //\u540E\u9762\n        boxMesh.addVertex(-halfLong, halfHeight, -halfWidth, 0, 0, -1, 1, 0, 1,0,0,1);\n        boxMesh.addVertex(halfLong, halfHeight, -halfWidth, 0, 0, -1, 0, 0, 0,1,0,0);\n        boxMesh.addVertex(halfLong, -halfHeight, -halfWidth, 0, 0, -1, 0, 1, 0,0,1,1);\n        boxMesh.addVertex(-halfLong, -halfHeight, -halfWidth, 0, 0, -1, 1, 1, 1,1,0,1);\n\n        boxMesh.triangle.push(0, 1, 2, 2, 3, 0,\n            4, 7, 6, 6, 5, 4,\n            8, 9, 10, 10, 11, 8,\n            12, 15, 14, 14, 13, 12,\n            16, 17, 18, 18, 19, 16,\n            20, 23, 22, 22, 21, 20);\n\n        return boxMesh;\n    }\n\n}", "/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */\nimport View=Laya.View;\nimport Dialog=Laya.Dialog;\nimport Scene=Laya.Scene;\nvar REG: Function = Laya.ClassUtils.regClass;\nexport module ui.test {\n    export class TestSceneUI extends Scene {\n\t\tpublic slider_width:Laya.HSlider;\n\t\tpublic slider_speed:Laya.HSlider;\n        constructor(){ super()}\n        createChildren():void {\n            super.createChildren();\n            this.loadScene(\"test/TestScene\");\n        }\n    }\n    REG(\"ui.test.TestSceneUI\",TestSceneUI);\n}", "export default class UVBlurMatrial extends Laya.Material {\n\n    public static ALBODETEXTURE = Laya.Shader3D.propertyNameToID(\"u_AlbedoTexture\");\n    public static ALBODECOLOR = Laya.Shader3D.propertyNameToID(\"u_AlbedoColor\");\n    public static BLURWIDTH = Laya.Shader3D.propertyNameToID(\"u_BlurWidth\");\n    public static SPEED = Laya.Shader3D.propertyNameToID(\"u_Speed\");\n\n    public static DEFINE_ALBEDOTEXTURE = Laya.Shader3D.getDefineByName(\"ALBEDOTEXTURE\");\n\n    constructor() {\n        super();\n        this.setShaderName(\"UVBlur\");\n        this.albedoColor = new Laya.Vector4(1.0,1.0,1.0,1.0);\n\n        this.blurWidth = 0.0005;\n        this.speed = 1.0;\n    }\n\n    public set albedoColor(value: Laya.Vector4) {\n        this._shaderValues.setVector(UVBlurMatrial.ALBODECOLOR, value);\n    }\n\n    public set albedoTexture(value: Laya.BaseTexture) {\n        if (value) {\n            this._shaderValues.addDefine(UVBlurMatrial.DEFINE_ALBEDOTEXTURE);\n            this._shaderValues.setTexture(UVBlurMatrial.ALBODETEXTURE, value);\n        } else {\n            this._shaderValues.removeDefine(UVBlurMatrial.DEFINE_ALBEDOTEXTURE);\n        }\n    }\n\n    public set speed(value:number){\n        this._shaderValues.setNumber(UVBlurMatrial.SPEED,value);\n    }\n\n    public set blurWidth(value:number){\n        this._shaderValues.setNumber(UVBlurMatrial.BLURWIDTH,value);\n    }\n\n}", "import verticesShader from \"./UVBlur.vs\";\nimport fragmentShader from \"./UVBlur.fs\";\nexport default class UVBlurShader {\n    public static initShader(): void {\n        let attributeMap = {\n            \"a_Position\":Laya.VertexMesh.MESH_POSITION0,\n            \"a_MvpMatrix\":Laya.VertexMesh.MESH_WORLDMATRIX_ROW0,\n            \"a_Color\":Laya.VertexMesh.MESH_COLOR0,\n            \"a_TexCoord0\":Laya.VertexMesh.MESH_TEXTURECOORDINATE0\n        };\n        let uniformMap = {\n            \"u_MvpMatrix\":Laya.Shader3D.PERIOD_SPRITE,\n            \"u_Speed\":Laya.Shader3D.PERIOD_MATERIAL,\n            \"u_Width\":Laya.Shader3D.PERIOD_MATERIAL,\n            \"u_AlbedoTexture\":Laya.Shader3D.PERIOD_MATERIAL,\n            \"u_AlbedoColor\":Laya.Shader3D.PERIOD_MATERIAL,\n            \"u_BlurWidth\":Laya.Shader3D.PERIOD_MATERIAL\n        };\n        let shader = Laya.Shader3D.add(\"UVBlur\");\n\n        let subShader = new Laya.SubShader(attributeMap, uniformMap);\n\n        shader.addSubShader(subShader);\n\n        subShader.addShaderPass(verticesShader,fragmentShader);\n    }\n}", "import BoxMesh from \"../mesh/BoxMesh\";\nimport HollowCylinderMesh from \"../mesh/HollowCylinderMesh\";\nimport MeshData from \"../mesh/MeshData\";\nimport GerstnerWaveMatrial from \"../shader/GerstnerWaveMatrial\";\nimport GerstnerWaveShader from \"../shader/GerstnerWaveShader\";\nimport NormalMoveMatrial from \"../shader/NormalMoveMatrial\";\nimport NormalMoveShader from \"../shader/NormalMoveShader\";\nimport Shader from \"../shader/Shader\";\nimport VertexColorMatrial from \"../shader/VertexColorMatrial\";\nimport VertexColorShader from \"../shader/VertexColorShader\";\nimport VertexUVMatrial from \"../shader/VertexUVMatrial\";\nimport VertexUVShader from \"../shader/VertexUVShader\";\nimport VertexWaveMatrial from \"../shader/VertexWaveMatrial\";\nimport VertexWaveShader from \"../shader/VertexWaveShader\";\nimport { ui } from \"./../ui/layaMaxUI\";\nimport Rotation from \"./Rotation\";\nimport VertexUVAniMatrial from \"../shader/VertexUVAniMatrial\";\nimport VertexUVAniShader from \"../shader/VertexUVAniShader\";\nimport UVWaterMatrial from \"../shader/UVWaterMatrial\";\nimport UVWaterShader from \"../shader/UVWaterShader\";\nimport UVBlurMatrial from \"../shader/UVBlurMatrial\";\nimport UVBlurShader from \"../shader/UVBlurShader\";\n/**\n * \u672C\u793A\u4F8B\u91C7\u7528\u975E\u811A\u672C\u7684\u65B9\u5F0F\u5B9E\u73B0\uFF0C\u800C\u4F7F\u7528\u7EE7\u627F\u9875\u9762\u57FA\u7C7B\uFF0C\u5B9E\u73B0\u9875\u9762\u903B\u8F91\u3002\u5728IDE\u91CC\u9762\u8BBE\u7F6E\u573A\u666F\u7684Runtime\u5C5E\u6027\u5373\u53EF\u548C\u573A\u666F\u8FDB\u884C\u5173\u8054\n * \u76F8\u6BD4\u811A\u672C\u65B9\u5F0F\uFF0C\u7EE7\u627F\u5F0F\u9875\u9762\u7C7B\uFF0C\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528\u9875\u9762\u5B9A\u4E49\u7684\u5C5E\u6027\uFF08\u901A\u8FC7IDE\u5185var\u5C5E\u6027\u5B9A\u4E49\uFF09\uFF0C\u6BD4\u5982this.tipLbll\uFF0Cthis.scoreLbl\uFF0C\u5177\u6709\u4EE3\u7801\u63D0\u793A\u6548\u679C\n * \u5EFA\u8BAE\uFF1A\u5982\u679C\u662F\u9875\u9762\u7EA7\u7684\u903B\u8F91\uFF0C\u9700\u8981\u9891\u7E41\u8BBF\u95EE\u9875\u9762\u5185\u591A\u4E2A\u5143\u7D20\uFF0C\u4F7F\u7528\u7EE7\u627F\u5F0F\u5199\u6CD5\uFF0C\u5982\u679C\u662F\u72EC\u7ACB\u5C0F\u6A21\u5757\uFF0C\u529F\u80FD\u5355\u4E00\uFF0C\u5EFA\u8BAE\u7528\u811A\u672C\u65B9\u5F0F\u5B9E\u73B0\uFF0C\u6BD4\u5982\u5B50\u5F39\u811A\u672C\u3002\n */\nexport default class GameUI extends ui.test.TestSceneUI {\n    constructor() {\n        super();\n\n        //\u6DFB\u52A03D\u573A\u666F\n        var scene: Laya.Scene3D = Laya.stage.addChild(new Laya.Scene3D()) as Laya.Scene3D;\n        scene.ambientColor = new Laya.Vector3(0.6, 0.6, 0.6);\n\n        //\u6DFB\u52A0\u7167\u76F8\u673A\n        var camera: Laya.Camera = (scene.addChild(new Laya.Camera(0, 0.1, 100))) as Laya.Camera;\n        // camera.transform.translate(new Laya.Vector3(0, 3, 3));\n        // camera.transform.rotate(new Laya.Vector3(0, 0, 0), true, false);\n\n        //\u6DFB\u52A0\u65B9\u5411\u5149\n        var directionLight: Laya.DirectionLight = scene.addChild(new Laya.DirectionLight()) as Laya.DirectionLight;\n        directionLight.color = new Laya.Vector3(0.6, 0.6, 0.6);\n        directionLight.transform.worldMatrix.setForward(new Laya.Vector3(1, -1, 0));\n\n        //\u6DFB\u52A0\u81EA\u5B9A\u4E49\u6A21\u578B\n        // var mesh: MeshData = HollowCylinderMesh.create(0.5, 1, 64, 0.5);\n        // // var box: Laya.MeshSprite3D = scene.addChild(new Laya.MeshSprite3D(Laya.PrimitiveMesh.createBox(1, 1, 1))) as Laya.MeshSprite3D;\n        // var box: Laya.MeshSprite3D = scene.addChild(new Laya.MeshSprite3D(mesh.createMesh())) as Laya.MeshSprite3D;\n        // // box.transform.rotate(new Laya.Vector3(0, 45, 0), false, false);\n        // box.transform.position = new Laya.Vector3(0, 1, 0);\n\n        // // var material: Laya.BlinnPhongMaterial = new Laya.BlinnPhongMaterial();\n        // // Laya.Texture2D.load(\"res/layabox.png\", Laya.Handler.create(null, function(tex:Laya.Texture2D) {\n        // // \t\tmaterial.albedoTexture = tex;\n        // // }));\n        // Shader.initShader();\n        // let material = new Laya.BlinnPhongMaterial();\n        // material.enableVertexColor = true;\n        // box.meshRenderer.material = material;\n\n        // box.addComponent(Rotation);\n\n        // VertexColor\n        // camera.transform.translate(new Laya.Vector3(0, 3, 3));\n        // camera.transform.rotate(new Laya.Vector3(0, 0, 0), true, false);\n        // VertexColorShader.initShader();\n\n        // let box = scene.addChild(new Laya.MeshSprite3D(Laya.PrimitiveMesh.createSphere(1, 64, 64))) as Laya.MeshSprite3D;\n        // box.transform.position = new Laya.Vector3(0,3,-1);\n\n        // let material = new VertexColorMatrial();\n        // box.meshRenderer.material = material;\n\n        // VertexWave\n        // camera.transform.translate(new Laya.Vector3(0, 10, 10));\n        // camera.transform.rotate(new Laya.Vector3(-30, 0, 0), true, false);\n        // VertexWaveShader.initShader();\n        // this.box = scene.addChild(new Laya.MeshSprite3D(Laya.PrimitiveMesh.createPlane(10, 10, 200,20))) as Laya.MeshSprite3D;\n        // this.box.transform.position = new Laya.Vector3(0,0,-5);\n\n        // let material = new VertexWaveMatrial();\n        // this.box.meshRenderer.material = material;\n        // this.slider_width.on(Laya.Event.CHANGED,this,this.onSliderWidthChange);\n        // this.slider_speed.on(Laya.Event.CHANGED,this,this.onSliderSpeedChange);\n\n        // GerstnerWave\n        // camera.transform.translate(new Laya.Vector3(0, 10, 10));\n        // camera.transform.rotate(new Laya.Vector3(-30, 0, 0), true, false);\n        // GerstnerWaveShader.initShader();\n        // this.box = scene.addChild(new Laya.MeshSprite3D(Laya.PrimitiveMesh.createPlane(10, 10, 200, 20))) as Laya.MeshSprite3D;\n        // this.box.transform.position = new Laya.Vector3(0, 0, -5);\n\n        // let material = new GerstnerWaveMatrial();\n        // this.box.meshRenderer.material = material;\n\n        //  NormalMove\n        // camera.transform.translate(new Laya.Vector3(0, 5, 5));\n        // camera.transform.rotate(new Laya.Vector3(-30, 0, 0), true, false);\n        // NormalMoveShader.initShader();\n        // this.box = scene.addChild(new Laya.MeshSprite3D(Laya.PrimitiveMesh.createSphere(1, 32, 32))) as Laya.MeshSprite3D;\n        // this.box.transform.position = new Laya.Vector3(0, 2, 0);\n\n        // let material = new NormalMoveMatrial();\n        // this.box.meshRenderer.material = material;\n\n        // VertexUV\n        // camera.transform.translate(new Laya.Vector3(0, 3, 3));\n        // camera.transform.rotate(new Laya.Vector3(0, 0, 0), true, false);\n        // VertexUVShader.initShader();\n\n        // let meshData =  BoxMesh.createBox(1.5,1.5,1);\n        // this.box = scene.addChild(new Laya.MeshSprite3D(meshData.createMesh())) as Laya.MeshSprite3D;\n        // this.box.transform.position = new Laya.Vector3(0, 3, 0);\n\n        // let material = new VertexUVMatrial();\n        // Laya.Texture2D.load(\"res/layabox.png\",Laya.Handler.create(this,(text)=>{\n        //     material.albedoTexture = text;\n        //     material.tilingOffset = new Laya.Vector4(2,2,0.5,0.5);\n        // }))\n\n        // this.box.meshRenderer.material = material;\n\n        // VertexUVAniS\n        // camera.transform.translate(new Laya.Vector3(0, 3, 3));\n        // camera.transform.rotate(new Laya.Vector3(0, 0, 0), true, false);\n        // VertexUVAniShader.initShader();\n\n        // let meshData =  BoxMesh.createBox(1.5,1.5,1);\n        // this.box = scene.addChild(new Laya.MeshSprite3D(meshData.createMesh())) as Laya.MeshSprite3D;\n        // this.box.transform.position = new Laya.Vector3(0, 3, 0);\n\n        // let material = new VertexUVAniMatrial();\n        // Laya.Texture2D.load(\"res/animation.png\",Laya.Handler.create(this,(text)=>{\n        //     material.albedoTexture = text;\n        // }))\n\n        // this.box.meshRenderer.material = material;\n\n        // UVWater\n        // camera.transform.translate(new Laya.Vector3(0, 3, 3));\n        // camera.transform.rotate(new Laya.Vector3(0, 0, 0), true, false);\n        // UVWaterShader.initShader();\n\n        // let meshData =  BoxMesh.createBox(1.5,1.5,1);\n        // this.box = scene.addChild(new Laya.MeshSprite3D(meshData.createMesh())) as Laya.MeshSprite3D;\n        // this.box.transform.position = new Laya.Vector3(0, 3, 0);\n\n        // let material = new UVWaterMatrial();\n        // Laya.Texture2D.load(\"res/water.png\",Laya.Handler.create(this,(text)=>{\n        //     material.albedoTexture = text;\n        // }))\n\n        // this.box.meshRenderer.material = material;\n\n        // UVBlur\n        camera.transform.translate(new Laya.Vector3(0, 3, 3));\n        camera.transform.rotate(new Laya.Vector3(0, 0, 0), true, false);\n        UVBlurShader.initShader();\n\n        let meshData =  BoxMesh.createBox(1.5,1.5,1);\n        this.box = scene.addChild(new Laya.MeshSprite3D(meshData.createMesh())) as Laya.MeshSprite3D;\n        this.box.transform.position = new Laya.Vector3(0, 3, 0);\n\n        let material = new UVBlurMatrial();\n        Laya.Texture2D.load(\"res/blur.png\",Laya.Handler.create(this,(text)=>{\n            material.albedoTexture = text;\n        }))\n\n        this.box.meshRenderer.material = material;\n        this.slider_width.on(Laya.Event.CHANGED,this,this.onSliderBlurWidthChange);\n    }\n\n    box: Laya.MeshSprite3D;\n    private onSliderWidthChange() {\n        let v = this.slider_width.value / 100;\n        let material: VertexWaveMatrial = this.box.meshRenderer.sharedMaterial as VertexWaveMatrial;\n        material.width = v;\n    }\n\n    private onSliderBlurWidthChange() {\n        let v = this.slider_width.value / 10000;\n        let material: UVBlurMatrial = this.box.meshRenderer.sharedMaterial as UVBlurMatrial;\n        material.blurWidth = v;\n    }\n\n    private onSliderSpeedChange() {\n        let v = this.slider_speed.value / 100;\n        let material: VertexWaveMatrial = this.box.meshRenderer.sharedMaterial as VertexWaveMatrial;\n        material.speed = v;\n    }\n\n}", "/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */\nimport GameUI from \"./script/GameUI\"\n/*\n* \u6E38\u620F\u521D\u59CB\u5316\u914D\u7F6E;\n*/\nexport default class GameConfig{\n    static width:number=640;\n    static height:number=1136;\n    static scaleMode:string=\"fixedwidth\";\n    static screenMode:string=\"none\";\n    static alignV:string=\"top\";\n    static alignH:string=\"left\";\n    static startScene:any=\"test/TestScene.scene\";\n    static sceneRoot:string=\"\";\n    static debug:boolean=false;\n    static stat:boolean=false;\n    static physicsDebug:boolean=false;\n    static exportSceneToJson:boolean=true;\n    constructor(){}\n    static init(){\n        var reg: Function = Laya.ClassUtils.regClass;\n        reg(\"script/GameUI.ts\",GameUI);\n    }\n}\nGameConfig.init();", "import GameConfig from \"./GameConfig\";\nclass Main {\n\tconstructor() {\n\t\t// Config.printWebglOrder = true;\n\t\t//\u6839\u636EIDE\u8BBE\u7F6E\u521D\u59CB\u5316\u5F15\u64CE\t\t\n\t\tif (window[\"Laya3D\"]) Laya3D.init(GameConfig.width, GameConfig.height);\n\t\telse Laya.init(GameConfig.width, GameConfig.height, Laya[\"WebGL\"]);\n\t\tLaya[\"Physics\"] && Laya[\"Physics\"].enable();\n\t\tLaya[\"DebugPanel\"] && Laya[\"DebugPanel\"].enable();\n\t\tLaya.stage.scaleMode = GameConfig.scaleMode;\n\t\tLaya.stage.screenMode = GameConfig.screenMode;\n\t\tLaya.stage.alignV = GameConfig.alignV;\n\t\tLaya.stage.alignH = GameConfig.alignH;\n\t\t//\u517C\u5BB9\u5FAE\u4FE1\u4E0D\u652F\u6301\u52A0\u8F7Dscene\u540E\u7F00\u573A\u666F\n\t\tLaya.URL.exportSceneToJson = GameConfig.exportSceneToJson;\n\n\t\t//\u6253\u5F00\u8C03\u8BD5\u9762\u677F\uFF08\u901A\u8FC7IDE\u8BBE\u7F6E\u8C03\u8BD5\u6A21\u5F0F\uFF0C\u6216\u8005url\u5730\u5740\u589E\u52A0debug=true\u53C2\u6570\uFF0C\u5747\u53EF\u6253\u5F00\u8C03\u8BD5\u9762\u677F\uFF09\n\t\tif (GameConfig.debug || Laya.Utils.getQueryString(\"debug\") == \"true\") Laya.enableDebugPanel();\n\t\tif (GameConfig.physicsDebug && Laya[\"PhysicsDebugDraw\"]) Laya[\"PhysicsDebugDraw\"].enable();\n\t\tif (GameConfig.stat) Laya.Stat.show();\n\t\tLaya.alertGlobalError(true);\n\n\t\t//\u6FC0\u6D3B\u8D44\u6E90\u7248\u672C\u63A7\u5236\uFF0Cversion.json\u7531IDE\u53D1\u5E03\u529F\u80FD\u81EA\u52A8\u751F\u6210\uFF0C\u5982\u679C\u6CA1\u6709\u4E5F\u4E0D\u5F71\u54CD\u540E\u7EED\u6D41\u7A0B\n\t\tLaya.ResourceVersion.enable(\"version.json\", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);\n\t}\n\n\tonVersionLoaded(): void {\n\t\t//\u6FC0\u6D3B\u5927\u5C0F\u56FE\u6620\u5C04\uFF0C\u52A0\u8F7D\u5C0F\u56FE\u7684\u65F6\u5019\uFF0C\u5982\u679C\u53D1\u73B0\u5C0F\u56FE\u5728\u5927\u56FE\u5408\u96C6\u91CC\u9762\uFF0C\u5219\u4F18\u5148\u52A0\u8F7D\u5927\u56FE\u5408\u96C6\uFF0C\u800C\u4E0D\u662F\u5C0F\u56FE\n\t\tLaya.AtlasInfoManager.enable(\"fileconfig.json\", Laya.Handler.create(this, this.onConfigLoaded));\n\t}\n\n\tonConfigLoaded(): void {\n\t\t//\u52A0\u8F7DIDE\u6307\u5B9A\u7684\u573A\u666F\n\t\tGameConfig.startScene && Laya.Scene.open(GameConfig.startScene);\n\t}\n}\n//\u6FC0\u6D3B\u542F\u52A8\u7C7B\nnew Main();\n"],
  "mappings": ";;AAAA,2BAAkC;AAAA,IAAlC;AACW,eAAY;AACZ,eAAY;AACZ,eAAY;AAGZ,gBAAa;AACb,gBAAa;AACb,gBAAa;AAGb,eAAY;AACZ,eAAY;AAGZ,eAAY;AACZ,eAAY;AACZ,eAAY;AACZ,eAAY;AAAA;AAAA;;;AChBvB,uBAA8B;AAAA,IAA9B,cAFA;AAIW,qBAA0B;AAE1B,sBAAqB;AAAA;AAAA,IAErB,aAAwB;AAC3B,UAAI,oBAAoB,KAAK,WAAW,qBAAqB;AAC7D,UAAI,UAAoB;AACxB,eAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,QAAQ,KAAK;AAC1C,YAAI,SAAuB,KAAK,QAAQ;AACxC,gBAAQ,KACJ,OAAO,GACP,OAAO,GACP,OAAO,GACP,OAAO,IACP,OAAO,IACP,OAAO,IACP,OAAO,GACP,OAAO,GACP,OAAO,GACP,OAAO,GACP,OAAO,GACP,OAAO;AAAA;AAGf,UAAI,WAAW,IAAI,aAAa;AAChC,UAAI,UAAU,IAAI,YAAY,KAAK;AACnC,aAAO,KAAK,cAAc,eAAe,mBAAmB,UAAU;AAAA;AAAA,IAGnE,UAAU,GAAW,GAAW,GAAW,IAAY,IAAY,IAAY,GAAW,GAAW,GAAW,GAAW,GAAW,GAAiB;AAC1J,UAAI,SAAuB,IAAI;AAC/B,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AAEX,aAAO,KAAK;AACZ,aAAO,KAAK;AACZ,aAAO,KAAK;AAEZ,aAAO,IAAI;AACX,aAAO,IAAI;AAEX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AAEX,WAAK,QAAQ,KAAK;AAAA;AAAA,IAIf,YAAY,MAA4B;AAC3C,eAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAClC,YAAI,OAAiB,KAAK;AAC1B,YAAI,QAAgB,KAAK,QAAQ;AACjC,iBAAS,IAAY,GAAG,IAAI,KAAK,QAAQ,QAAQ,KAAK;AAClD,eAAK,QAAQ,KAAK,KAAK,QAAQ;AAAA;AAEnC,iBAAS,IAAY,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AACnD,eAAK,SAAS,KAAK,KAAK,SAAS,KAAG;AAAA;AAAA;AAG5C,aAAO;AAAA;AAAA;;;AChEf,sBAA4B;AAAA,WAEjB,UAAU,OAAO,GACP,SAAS,GACT,QAAQ,GAAY;AAEjC,UAAI,WAAW,OAAO;AACtB,UAAI,aAAa,SAAS;AAC1B,UAAI,YAAY,QAAQ;AAExB,UAAI,UAAmB,IAAI;AAG3B,cAAQ,UAAU,CAAC,UAAU,YAAY,CAAC,WAAW,GAAG,GAAG,GAAG,GAAG,GAAI,GAAE,GAAE,GAAE;AAC3E,cAAQ,UAAU,UAAU,YAAY,CAAC,WAAW,GAAG,GAAG,GAAG,GAAG,GAAI,GAAE,GAAE,GAAE;AAC1E,cAAQ,UAAU,UAAU,YAAY,WAAW,GAAG,GAAG,GAAG,GAAG,GAAI,GAAE,GAAE,GAAE;AACzE,cAAQ,UAAU,CAAC,UAAU,YAAY,WAAW,GAAG,GAAG,GAAG,GAAG,GAAI,GAAE,GAAE,GAAE;AAE1E,cAAQ,UAAU,CAAC,UAAU,CAAC,YAAY,CAAC,WAAW,GAAG,IAAI,GAAG,GAAG,GAAI,GAAE,GAAE,GAAE;AAC7E,cAAQ,UAAU,UAAU,CAAC,YAAY,CAAC,WAAW,GAAG,IAAI,GAAG,GAAG,GAAI,GAAE,GAAE,GAAE;AAC5E,cAAQ,UAAU,UAAU,CAAC,YAAY,WAAW,GAAG,IAAI,GAAG,GAAG,GAAI,GAAE,GAAE,GAAE;AAC3E,cAAQ,UAAU,CAAC,UAAU,CAAC,YAAY,WAAW,GAAG,IAAI,GAAG,GAAG,GAAI,GAAE,GAAE,GAAE;AAE5E,cAAQ,UAAU,CAAC,UAAU,YAAY,CAAC,WAAW,IAAI,GAAG,GAAG,GAAG,GAAI,GAAE,GAAE,GAAE;AAC5E,cAAQ,UAAU,CAAC,UAAU,YAAY,WAAW,IAAI,GAAG,GAAG,GAAG,GAAI,GAAE,GAAE,GAAE;AAC3E,cAAQ,UAAU,CAAC,UAAU,CAAC,YAAY,WAAW,IAAI,GAAG,GAAG,GAAG,GAAI,GAAE,GAAE,GAAE;AAC5E,cAAQ,UAAU,CAAC,UAAU,CAAC,YAAY,CAAC,WAAW,IAAI,GAAG,GAAG,GAAG,GAAI,GAAE,GAAE,GAAE;AAE7E,cAAQ,UAAU,UAAU,YAAY,CAAC,WAAW,GAAG,GAAG,GAAG,GAAG,GAAI,GAAE,GAAE,GAAE;AAC1E,cAAQ,UAAU,UAAU,YAAY,WAAW,GAAG,GAAG,GAAG,GAAG,GAAI,GAAE,GAAE,GAAE;AACzE,cAAQ,UAAU,UAAU,CAAC,YAAY,WAAW,GAAG,GAAG,GAAG,GAAG,GAAI,GAAE,GAAE,GAAE;AAC1E,cAAQ,UAAU,UAAU,CAAC,YAAY,CAAC,WAAW,GAAG,GAAG,GAAG,GAAG,GAAI,GAAE,GAAE,GAAE;AAG3E,cAAQ,UAAU,CAAC,UAAU,YAAY,WAAW,GAAG,GAAG,GAAG,GAAG,GAAI,GAAE,GAAE,GAAE;AAC1E,cAAQ,UAAU,UAAU,YAAY,WAAW,GAAG,GAAG,GAAG,GAAG,GAAI,GAAE,GAAE,GAAE;AACzE,cAAQ,UAAU,UAAU,CAAC,YAAY,WAAW,GAAG,GAAG,GAAG,GAAG,GAAI,GAAE,GAAE,GAAE;AAC1E,cAAQ,UAAU,CAAC,UAAU,CAAC,YAAY,WAAW,GAAG,GAAG,GAAG,GAAG,GAAI,GAAE,GAAE,GAAE;AAI3E,cAAQ,UAAU,CAAC,UAAU,YAAY,CAAC,WAAW,GAAG,GAAG,IAAI,GAAG,GAAG,GAAE,GAAE,GAAE;AAC3E,cAAQ,UAAU,UAAU,YAAY,CAAC,WAAW,GAAG,GAAG,IAAI,GAAG,GAAG,GAAE,GAAE,GAAE;AAC1E,cAAQ,UAAU,UAAU,CAAC,YAAY,CAAC,WAAW,GAAG,GAAG,IAAI,GAAG,GAAG,GAAE,GAAE,GAAE;AAC3E,cAAQ,UAAU,CAAC,UAAU,CAAC,YAAY,CAAC,WAAW,GAAG,GAAG,IAAI,GAAG,GAAG,GAAE,GAAE,GAAE;AAE5E,cAAQ,SAAS,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,GACjC,GAAG,GAAG,GAAG,GAAG,GAAG,GACf,GAAG,GAAG,IAAI,IAAI,IAAI,GAClB,IAAI,IAAI,IAAI,IAAI,IAAI,IACpB,IAAI,IAAI,IAAI,IAAI,IAAI,IACpB,IAAI,IAAI,IAAI,IAAI,IAAI;AAExB,aAAO;AAAA;AAAA;;;ACpDf,MAAO,QAAM,KAAK;AAClB,MAAI,MAAgB,KAAK,WAAW;AAC7B,MAAO;AAAP,YAAO,KAAP;AAAS,QAAC;AAAD,cAAC,OAAD;AACL,gCAA0B,MAAM;AAAA,QAGnC,cAAa;AAAE;AAAA;AAAA,QACf,iBAAsB;AAClB,gBAAM;AACN,eAAK,UAAU;AAAA;AAAA;AANhB,YAAM;AASb,UAAI,uBAAsB;AAAA,OAVb;AAAA,KAAH;;;ACLd,qCAA2C,KAAK,SAAS;AAAA,IASrD,cAAc;AACV;AACA,WAAK,cAAc;AACnB,WAAK,cAAc,IAAI,KAAK,QAAQ,GAAI,GAAI,GAAI;AAEhD,WAAK,YAAY;AACjB,WAAK,QAAQ;AAAA;AAAA,QAGN,YAAY,OAAqB;AACxC,WAAK,cAAc,UAAU,eAAc,aAAa;AAAA;AAAA,QAGjD,cAAc,OAAyB;AAC9C,UAAI,OAAO;AACP,aAAK,cAAc,UAAU,eAAc;AAC3C,aAAK,cAAc,WAAW,eAAc,eAAe;AAAA,aACxD;AACH,aAAK,cAAc,aAAa,eAAc;AAAA;AAAA;AAAA,QAI3C,MAAM,OAAa;AAC1B,WAAK,cAAc,UAAU,eAAc,OAAM;AAAA;AAAA,QAG1C,UAAU,OAAa;AAC9B,WAAK,cAAc,UAAU,eAAc,WAAU;AAAA;AAAA;AApC7D;AAEkB,EAFlB,cAEkB,gBAAgB,KAAK,SAAS,iBAAiB;AAC/C,EAHlB,cAGkB,cAAc,KAAK,SAAS,iBAAiB;AAC7C,EAJlB,cAIkB,YAAY,KAAK,SAAS,iBAAiB;AAC3C,EALlB,cAKkB,QAAQ,KAAK,SAAS,iBAAiB;AAEvC,EAPlB,cAOkB,uBAAuB,KAAK,SAAS,gBAAgB;;;;;;;;;ACLvE,2BAAkC;AAAA,WAChB,aAAmB;AAC7B,UAAI,eAAe;AAAA,QACf,cAAa,KAAK,WAAW;AAAA,QAC7B,eAAc,KAAK,WAAW;AAAA,QAC9B,WAAU,KAAK,WAAW;AAAA,QAC1B,eAAc,KAAK,WAAW;AAAA;AAElC,UAAI,aAAa;AAAA,QACb,eAAc,KAAK,SAAS;AAAA,QAC5B,WAAU,KAAK,SAAS;AAAA,QACxB,WAAU,KAAK,SAAS;AAAA,QACxB,mBAAkB,KAAK,SAAS;AAAA,QAChC,iBAAgB,KAAK,SAAS;AAAA,QAC9B,eAAc,KAAK,SAAS;AAAA;AAEhC,UAAI,SAAS,KAAK,SAAS,IAAI;AAE/B,UAAI,YAAY,IAAI,KAAK,UAAU,cAAc;AAEjD,aAAO,aAAa;AAEpB,gBAAU,cAAc,gBAAe;AAAA;AAAA;;;ACG/C,6BAAoC,GAAG,KAAK,YAAY;AAAA,IACpD,cAAc;AACV;AAGA,UAAI,QAAsB,KAAK,MAAM,SAAS,IAAI,KAAK;AACvD,YAAM,eAAe,IAAI,KAAK,QAAQ,KAAK,KAAK;AAGhD,UAAI,SAAuB,MAAM,SAAS,IAAI,KAAK,OAAO,GAAG,KAAK;AAKlE,UAAI,iBAAsC,MAAM,SAAS,IAAI,KAAK;AAClE,qBAAe,QAAQ,IAAI,KAAK,QAAQ,KAAK,KAAK;AAClD,qBAAe,UAAU,YAAY,WAAW,IAAI,KAAK,QAAQ,GAAG,IAAI;AAiHxE,aAAO,UAAU,UAAU,IAAI,KAAK,QAAQ,GAAG,GAAG;AAClD,aAAO,UAAU,OAAO,IAAI,KAAK,QAAQ,GAAG,GAAG,IAAI,MAAM;AACzD,mBAAa;AAEb,UAAI,WAAY,QAAQ,UAAU,KAAI,KAAI;AAC1C,WAAK,MAAM,MAAM,SAAS,IAAI,KAAK,aAAa,SAAS;AACzD,WAAK,IAAI,UAAU,WAAW,IAAI,KAAK,QAAQ,GAAG,GAAG;AAErD,UAAI,WAAW,IAAI;AACnB,WAAK,UAAU,KAAK,gBAAe,KAAK,QAAQ,OAAO,MAAK,CAAC,SAAO;AAChE,iBAAS,gBAAgB;AAAA;AAG7B,WAAK,IAAI,aAAa,WAAW;AACjC,WAAK,aAAa,GAAG,KAAK,MAAM,SAAQ,MAAK,KAAK;AAAA;AAAA,IAI9C,sBAAsB;AAC1B,UAAI,IAAI,KAAK,aAAa,QAAQ;AAClC,UAAI,WAA8B,KAAK,IAAI,aAAa;AACxD,eAAS,QAAQ;AAAA;AAAA,IAGb,0BAA0B;AAC9B,UAAI,IAAI,KAAK,aAAa,QAAQ;AAClC,UAAI,WAA0B,KAAK,IAAI,aAAa;AACpD,eAAS,YAAY;AAAA;AAAA,IAGjB,sBAAsB;AAC1B,UAAI,IAAI,KAAK,aAAa,QAAQ;AAClC,UAAI,WAA8B,KAAK,IAAI,aAAa;AACxD,eAAS,QAAQ;AAAA;AAAA;;;ACxLzB,yBAA+B;AAAA,IAa3B,cAAa;AAAA;AAAA,WACN,OAAM;AACT,UAAI,MAAgB,KAAK,WAAW;AACpC,UAAI,oBAAmB;AAAA;AAAA;AAfpB,EADX,WACW,QAAa;AACb,EAFX,WAEW,SAAc;AACd,EAHX,WAGW,YAAiB;AACjB,EAJX,WAIW,aAAkB;AAClB,EALX,WAKW,SAAc;AACd,EANX,WAMW,SAAc;AACd,EAPX,WAOW,aAAe;AACf,EARX,WAQW,YAAiB;AACjB,EATX,WASW,QAAc;AACd,EAVX,WAUW,OAAa;AACb,EAXX,WAWW,eAAqB;AACrB,EAZX,WAYW,oBAA0B;AAOrC,aAAW;;;ACvBX,mBAAW;AAAA,IACV,cAAc;AAGb,UAAI,OAAO;AAAW,eAAO,KAAK,WAAW,OAAO,WAAW;AAAA;AAC1D,aAAK,KAAK,WAAW,OAAO,WAAW,QAAQ,KAAK;AACzD,WAAK,cAAc,KAAK,WAAW;AACnC,WAAK,iBAAiB,KAAK,cAAc;AACzC,WAAK,MAAM,YAAY,WAAW;AAClC,WAAK,MAAM,aAAa,WAAW;AACnC,WAAK,MAAM,SAAS,WAAW;AAC/B,WAAK,MAAM,SAAS,WAAW;AAE/B,WAAK,IAAI,oBAAoB,WAAW;AAGxC,UAAI,WAAW,SAAS,KAAK,MAAM,eAAe,YAAY;AAAQ,aAAK;AAC3E,UAAI,WAAW,gBAAgB,KAAK;AAAqB,aAAK,oBAAoB;AAClF,UAAI,WAAW;AAAM,aAAK,KAAK;AAC/B,WAAK,iBAAiB;AAGtB,WAAK,gBAAgB,OAAO,gBAAgB,KAAK,QAAQ,OAAO,MAAM,KAAK,kBAAkB,KAAK,gBAAgB;AAAA;AAAA,IAGnH,kBAAwB;AAEvB,WAAK,iBAAiB,OAAO,mBAAmB,KAAK,QAAQ,OAAO,MAAM,KAAK;AAAA;AAAA,IAGhF,iBAAuB;AAEtB,iBAAW,cAAc,KAAK,MAAM,KAAK,WAAW;AAAA;AAAA;AAItD,MAAI;",
  "names": []
}
