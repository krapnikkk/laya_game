{
  "version": 3,
  "sources": ["../../src/GameConfig.ts", "../../src/UIManager.ts", "../../src/utils.ts", "../../src/script/CameraFollow.ts", "../../src/script/Gem.ts", "../../src/script/Spike.ts", "../../src/script/MapManager.ts", "../../src/script/PlayerController.ts", "../../src/script/App.ts", "../../src/Main.ts"],
  "sourcesContent": ["/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */\r\n/*\r\n* \u6E38\u620F\u521D\u59CB\u5316\u914D\u7F6E;\r\n*/\r\nexport default class GameConfig{\r\n    static width:number=1080;\r\n    static height:number=1920;\r\n    static scaleMode:string=\"fixedwidth\";\r\n    static screenMode:string=\"none\";\r\n    static alignV:string=\"top\";\r\n    static alignH:string=\"left\";\r\n    static startScene:any=\"index/StartScene.scene\";\r\n    static sceneRoot:string=\"\";\r\n    static debug:boolean=false;\r\n    static stat:boolean=false;\r\n    static physicsDebug:boolean=false;\r\n    static exportSceneToJson:boolean=true;\r\n    constructor(){}\r\n    static init(){\r\n        var reg: Function = Laya.ClassUtils.regClass;\r\n    }\r\n}\r\nGameConfig.init();", "export default class UIManager {\r\n    private static _ins: UIManager;\r\n    public static get ins(): UIManager {\r\n        if (this._ins == null) {\r\n            this._ins = new UIManager();\r\n        }\r\n        return this._ins;\r\n    }\r\n\r\n    private constructor() {\r\n        if (UIManager._ins) {\r\n            throw \"singleton class is not use new constructor!\";\r\n        }\r\n    }\r\n\r\n    homeView: fairygui.GComponent;\r\n    init() {\r\n        Laya.stage.addChild(fgui.GRoot.inst.displayObject);\r\n        this.homeView = fgui.UIPackage.createObject(\"home\", \"Main\") as fairygui.GComponent;\r\n        fgui.GRoot.inst.addChild(this.homeView);\r\n        this.initUI();\r\n    }\r\n\r\n    gameStart: boolean = false;\r\n    gem: number = 0;\r\n    bestScore: number = 0;\r\n    txtGem: fairygui.GTextField;\r\n    txtBest: fairygui.GTextField;\r\n    startController: fairygui.Controller;\r\n    initUI() {\r\n        let btn_start = this.homeView.getChild(\"btn_start\");\r\n        btn_start.onClick(this, this.startGame);\r\n\r\n        let btn_left = this.homeView.getChild(\"btn_left\");\r\n        let btn_right = this.homeView.getChild(\"btn_right\");\r\n        btn_left.onClick(this, this.move, [\"left\"]);\r\n        btn_right.onClick(this, this.move, [\"right\"]);\r\n\r\n        this.txtBest = this.homeView.getChild(\"txt_best\") as fairygui.GTextField;\r\n        this.txtGem = this.homeView.getChild(\"txt_gem\") as fairygui.GTextField;\r\n        this.bestScore = +Laya.LocalStorage.getItem(\"best\") || 0;\r\n        this.txtBest.text = this.bestScore + \"\";\r\n        this.startController = this.homeView.getController(\"status\");\r\n        Laya.stage.on(\"over\", this, this.gameOver);\r\n        Laya.stage.on(\"updateScore\", this, this.updateScore);\r\n\r\n    }\r\n\r\n    move(direction: string) {\r\n        if (this.gameStart) {\r\n            Laya.stage.event(\"move\", direction);\r\n        }\r\n    }\r\n\r\n    startGame() {\r\n        this.gameStart = true;\r\n        Laya.stage.event(\"start\");\r\n        Laya.timer.resume();\r\n        Laya.timer.scale = 1;\r\n        this.startController.selectedIndex = 1;\r\n    }\r\n\r\n    gameOver() {\r\n        this.gameStart = false;\r\n        this.startController.selectedIndex = 0;\r\n        if (this.bestScore < this.gem) {\r\n            Laya.LocalStorage.setItem(\"best\", this.gem + \"\");\r\n            this.bestScore = this.gem;\r\n        }\r\n        this.txtBest.text = this.bestScore + \"\";\r\n        this.gem = 0;\r\n    }\r\n\r\n    updateScore() {\r\n        this.gem++;\r\n        this.txtGem.text = this.gem + \"\";\r\n    }\r\n\r\n\r\n}", "export const rnd = (min: number, max: number) => {\r\n    return Math.round(Math.random() * (max - min) + min);\r\n}\r\n\r\nexport const sleep = (delay: number) => {\r\n    return new Promise<void>((resolve) => {\r\n        setTimeout(() => {\r\n            resolve();\r\n        }, delay);\r\n    })\r\n}", "export default class CameraFollow extends Laya.Script{\r\n\r\n    target: Laya.Transform3D;\r\n    startPos:Laya.Vector3;\r\n    transform: Laya.Transform3D;\r\n    onAwake(): void {\r\n        this.transform = (this.owner as Laya.Sprite3D).transform;\r\n        this.startPos = this.transform.position.clone();\r\n        Laya.stage.on(\"MoveCamera\", this, this.cameraMove);\r\n        Laya.stage.on(\"start\", this, this.startMove);\r\n        Laya.stage.on(\"over\", this, this.stopMove);\r\n    }\r\n\r\n    setTarget(target:Laya.Sprite3D){\r\n        this.target = target.transform;\r\n    }\r\n\r\n    moveTween:Laya.Tween;\r\n    cameraMove(){\r\n        if (!this.target){return};\r\n        let nextPos = new Laya.Vector3(this.transform.position.x, this.target.position.y + 1.5, this.target.position.z);\r\n        this.moveTween = Laya.Tween.to(this.transform, {\r\n            localPositionX: nextPos.x,\r\n            localPositionY: nextPos.y,\r\n            localPositionZ: nextPos.z\r\n         }, 250,Laya.Ease.linearIn);\r\n    }\r\n\r\n    stopMove(){\r\n        if (this.moveTween) {\r\n            Laya.Tween.clear(this.moveTween);\r\n        }\r\n    }\r\n\r\n    startMove(){\r\n        this.transform.position = this.startPos;\r\n    }\r\n}", "import { rnd } from \"../utils\";\r\n\r\nexport default class Gem extends Laya.Script {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n\r\n    child: Laya.Node;\r\n    onAwake(): void {\r\n        this.child = this.owner.getChildByName(\"gem 3\");\r\n    }\r\n    onUpdate(): void {\r\n        let num = rnd(1, 3);\r\n        let rotation: Laya.Vector3 = num == 1 ? new Laya.Vector3(0.1, 0, 0) : num ? new Laya.Vector3(0, 0.1, 0) : new Laya.Vector3(0, 0, 0.1);\r\n        (this.child as Laya.Sprite3D).transform.rotate(rotation);\r\n    }\r\n\r\n    destroy(): void {\r\n        this.owner.removeSelf();\r\n        Laya.Pool.recover(\"gem\", this.owner);\r\n    }\r\n    onDestroy(): void {\r\n        this.destroy();\r\n    }\r\n}", "import { sleep } from \"../utils\";\r\nimport { tileType } from \"./MapManager\";\r\n\r\nexport default class Spike extends Laya.Script {\r\n    child: Laya.Sprite3D;\r\n    normalPosition: Laya.Vector3;\r\n    targetPosition: Laya.Vector3 = new Laya.Vector3();\r\n    start: boolean = true;\r\n    floor: Laya.MeshSprite3D;\r\n    originColor:Laya.Vector4;\r\n    type: tileType;\r\n    onStart(): void {\r\n        let name = this.type == tileType.MOVIING_SPIKE ? \"moving_spikes_b\" : \"smashing_spikes_b\";\r\n        let target = this.type == tileType.MOVIING_SPIKE ? new Laya.Vector3(0, 0, 0.15) : new Laya.Vector3(0, 0, 0.6);\r\n        this.child = this.owner.getChildByName(name) as Laya.Sprite3D;\r\n        this.floor = this.owner.getChildByName(\"normal_a2\") as Laya.MeshSprite3D;\r\n        this.originColor = (this.floor.meshRenderer.material as Laya.BlinnPhongMaterial).albedoColor;\r\n        this.normalPosition = new Laya.Vector3(0, 0, 0);\r\n        Laya.Vector3.add(this.normalPosition, target, this.targetPosition);\r\n        this.play();\r\n    }\r\n\r\n    resetFloor(){\r\n        (this.floor.meshRenderer.material as Laya.BlinnPhongMaterial).albedoColor = this.originColor;\r\n    }\r\n\r\n    setType(type: tileType) {\r\n        this.type = type;\r\n    }\r\n\r\n    async play() {\r\n        await sleep(2000);\r\n        this.up();\r\n        await sleep(2000);\r\n        this.down();\r\n        this.play();\r\n    }\r\n\r\n    upTween: Laya.Tween;\r\n    downTween: Laya.Tween;\r\n    up() {\r\n        if (!this.start) {\r\n            return;\r\n        }\r\n        this.upTween = Laya.Tween.to(this.child.transform, {\r\n            localPositionX: this.targetPosition.x,\r\n            localPositionY: this.targetPosition.y,\r\n            localPositionZ: this.targetPosition.z\r\n        }, 1000, Laya.Ease.linearIn);\r\n    }\r\n\r\n    down() {\r\n        if (!this.start) {\r\n            return;\r\n        }\r\n        this.downTween = Laya.Tween.to(this.child.transform, {\r\n            localPositionX: this.normalPosition.x,\r\n            localPositionY: this.normalPosition.y,\r\n            localPositionZ: this.normalPosition.z\r\n        }, 1000, Laya.Ease.linearIn);\r\n    }\r\n\r\n    stop() {\r\n        console.log(\"stop\");\r\n        this.start = false;\r\n        // let rb = this.child.addComponent(Laya.Rigidbody3D) as Laya.Rigidbody3D;\r\n        // rb.isKinematic = true;\r\n        // rb.gravity = new Laya.Vector3(0, -10, 0);\r\n        // Laya.Tween.clearAll(this.child.transform);\r\n        Laya.Tween.clearTween(this.upTween);\r\n        Laya.Tween.clearTween(this.downTween);\r\n    }\r\n\r\n}", "export enum tileType {\r\n    TILE,\r\n    HOLE,\r\n    MOVIING_SPIKE,\r\n    SMASHING_SPIKE\r\n}\r\nimport { rnd, sleep } from \"../utils\";\r\nimport Gem from \"./Gem\";\r\nimport PlayerController from \"./PlayerController\";\r\nimport Spike from \"./Spike\";\r\n\r\nexport default class MapManager extends Laya.Script {\r\n    constructor() {\r\n        super();\r\n        Laya.stage.on(\"start\", this, this.startFallDown);\r\n        Laya.stage.on(\"over\", this, this.stopFallDown);\r\n    }\r\n\r\n    wallPrefab: Laya.Sprite3D;\r\n    tilePrefab: Laya.Sprite3D;\r\n    gemPrefab: Laya.Sprite3D;\r\n    playerController: PlayerController;\r\n    movingSpikePrefab: Laya.Sprite3D;\r\n    smashingSpikePrefab: Laya.Sprite3D;\r\n\r\n    onAwake() {\r\n        this.tilePrefab = Laya.Loader.getRes(\"./res/3dScene/tile/Conventional/tile.lh\") as Laya.Sprite3D;\r\n        this.wallPrefab = Laya.Loader.getRes(\"./res/3dScene/wall/Conventional/wall.lh\") as Laya.Sprite3D;\r\n        this.gemPrefab = Laya.Loader.getRes(\"./res/3dScene/gem/Conventional/gem.lh\") as Laya.Sprite3D;\r\n        this.movingSpikePrefab = Laya.Loader.getRes(\"./res/3dScene/moving_spikes/Conventional/moving_spikes.lh\") as Laya.Sprite3D;\r\n        this.smashingSpikePrefab = Laya.Loader.getRes(\"./res/3dScene/smashing_spikes/Conventional/smashing_spikes.lh\") as Laya.Sprite3D;\r\n\r\n    }\r\n\r\n    setPlayer(player: PlayerController) {\r\n        this.playerController = player;\r\n    }\r\n\r\n\r\n    // \u5730\u677F\u751F\u6210\r\n    tileList: Laya.Sprite3D[][] = [];\r\n    tileWidth: number = 0.25;\r\n    tileDistance: number = Math.SQRT2 * this.tileWidth;\r\n    halfDistance: number = this.tileDistance / 2;\r\n    rotation: Laya.Vector3 = new Laya.Vector3(-90, 45, 0);\r\n    createMapItem(offsetZ: number = 0) {\r\n        let deepColor = new Laya.Vector4(124 / 255, 155 / 255, 230 / 255, 1);\r\n        let pureColor = new Laya.Vector4(125 / 255, 169 / 255, 233 / 255, 1);\r\n        let wallColor = new Laya.Vector4(87 / 255, 93 / 255, 169 / 255, 1);\r\n        for (let i = 0; i < 10; i++) {\r\n            let gameObj: Laya.Sprite3D;\r\n            let pos: Laya.Vector3;\r\n            let list = [];\r\n            for (let j = 0; j < 6; j++) {\r\n                pos = new Laya.Vector3(j * this.tileDistance, 0, i * this.tileDistance + offsetZ);\r\n                if (j == 0 || j == 5) {\r\n                    gameObj = Laya.Pool.getItemByCreateFun(\"wall\", this.createWall, this);\r\n                    ((gameObj as Laya.MeshSprite3D).meshRenderer.material as Laya.BlinnPhongMaterial).albedoColor = wallColor;\r\n                    (gameObj as Laya.MeshSprite3D).meshRenderer.castShadow = true;\r\n                } else {\r\n                    let pr = this.calProbability();\r\n                    if (pr == tileType.TILE) {\r\n                        gameObj = Laya.Pool.getItemByCreateFun(\"tile\", this.createTile, this);\r\n                        let floor = gameObj.getChildByName(\"normal_a2\") as Laya.MeshSprite3D;\r\n                        (floor.meshRenderer.material as Laya.BlinnPhongMaterial).albedoColor = deepColor;\r\n                        (gameObj as Laya.MeshSprite3D).meshRenderer.receiveShadow = true;\r\n                        if (offsetZ != 0) {\r\n                            this.addGem(gameObj);\r\n                        }\r\n                    } else if (pr == tileType.HOLE) {\r\n                        gameObj = Laya.Pool.getItemByCreateFun(\"hole\", this.createHole, this);\r\n                    } else if (pr == tileType.MOVIING_SPIKE) {\r\n                        gameObj = Laya.Pool.getItemByCreateFun(\"moving_spikes\", this.createMovingSpike, this);\r\n                        let spike: Spike = gameObj.addComponent(Spike);\r\n                        spike.setType(tileType.MOVIING_SPIKE);\r\n                    } else if (pr == tileType.SMASHING_SPIKE) {\r\n                        gameObj = Laya.Pool.getItemByCreateFun(\"smashing_spikes\", this.createSmashingSpike, this);\r\n                        let spike: Spike = gameObj.addComponent(Spike);\r\n                        spike.setType(tileType.SMASHING_SPIKE);\r\n                    }\r\n                }\r\n                gameObj.transform.rotationEuler = this.rotation;\r\n                gameObj.transform.localPosition = pos;\r\n                this.owner.addChild(gameObj);\r\n                list[j] = gameObj;\r\n            }\r\n            this.tileList.push(list);\r\n            list = [];\r\n            for (let j = 0; j < 5; j++) {\r\n                pos = new Laya.Vector3(j * this.tileDistance + this.halfDistance, 0, i * this.tileDistance + this.halfDistance + offsetZ);\r\n                let pr = this.calProbability();\r\n\r\n                if (pr == tileType.TILE) {\r\n                    gameObj = Laya.Pool.getItemByCreateFun(\"tile\", this.createTile, this);\r\n                    let floor = gameObj.getChildByName(\"normal_a2\") as Laya.MeshSprite3D;\r\n                    (floor.meshRenderer.material as Laya.BlinnPhongMaterial).albedoColor = pureColor;\r\n                    (gameObj as Laya.MeshSprite3D).meshRenderer.receiveShadow = true;\r\n                    if (offsetZ != 0) {\r\n                        this.addGem(gameObj);\r\n                    }\r\n                } else if (pr == tileType.HOLE) {\r\n                    gameObj = Laya.Pool.getItemByCreateFun(\"hole\", this.createHole, this);\r\n                } else if (pr == tileType.MOVIING_SPIKE) {\r\n                    gameObj = Laya.Pool.getItemByCreateFun(\"moving_spikes\", this.createMovingSpike, this);\r\n                    let spike: Spike = gameObj.addComponent(Spike);\r\n                    spike.setType(tileType.MOVIING_SPIKE);\r\n                } else if (pr == tileType.SMASHING_SPIKE) {\r\n                    gameObj = Laya.Pool.getItemByCreateFun(\"smashing_spikes\", this.createSmashingSpike, this);\r\n                    let spike: Spike = gameObj.addComponent(Spike);\r\n                    spike.setType(tileType.SMASHING_SPIKE);\r\n                }\r\n                gameObj.transform.rotationEuler = this.rotation;\r\n                gameObj.transform.localPosition = pos;\r\n\r\n                list[j] = gameObj;\r\n                this.owner.addChild(gameObj);\r\n            }\r\n            this.tileList.push(list);\r\n\r\n        }\r\n    }\r\n\r\n    resetMap() {\r\n        for (let i = 0; i < this.tileList.length; i++) {\r\n            for(let j = 0;j<this.tileList[i].length;j++){\r\n                let item = this.tileList[i][j];\r\n                this.destroyItem(item, true);\r\n            }\r\n        }\r\n        this.tileList.length = 0;\r\n        this.downTileIndex = 0;\r\n        this.holeProbability = 0;\r\n        this.movingProbability = 0;\r\n        this.smashingProbability = 0;\r\n        this.gemProbability = 2;\r\n        this.createMapItem();\r\n        this.playerController.resetStatus();\r\n        this.needBuild = false;\r\n        Laya.timer.once(this.fallDownSpan, this, this.tileDown, null, false);\r\n    }\r\n\r\n    createWall() {\r\n        return Laya.Sprite3D.instantiate(this.wallPrefab, this.owner);\r\n    }\r\n\r\n    createTile() {\r\n        return Laya.Sprite3D.instantiate(this.tilePrefab, this.owner);\r\n    }\r\n\r\n    createHole(){\r\n        return new Laya.Sprite3D(\"hole\");\r\n    }\r\n\r\n    createMovingSpike() {\r\n        return Laya.Sprite3D.instantiate(this.movingSpikePrefab, this.owner);\r\n    }\r\n\r\n    createSmashingSpike() {\r\n        return Laya.Sprite3D.instantiate(this.smashingSpikePrefab, this.owner);\r\n    }\r\n\r\n    createGem() {\r\n        return Laya.Sprite3D.instantiate(this.gemPrefab);\r\n    }\r\n\r\n    // \u9677\u9631\u751F\u6210\r\n    /**\r\n     * 0 tile\r\n     * 1 hole\r\n     * 2 trap\r\n     * 3 fallTrap\r\n     */\r\n    holeProbability: number = 0;\r\n    movingProbability: number = 0;\r\n    smashingProbability: number = 0;\r\n    gemProbability: number = 2;\r\n    calProbability(): tileType {\r\n        let pr = rnd(1, 100);\r\n        if (pr < this.holeProbability) {\r\n            return tileType.HOLE;\r\n        } else if (31 < pr && pr < this.movingProbability + 30) {\r\n            return tileType.MOVIING_SPIKE;\r\n        } else if (61 < pr && pr < this.smashingProbability + 60) {\r\n            return tileType.SMASHING_SPIKE\r\n        }\r\n        return tileType.TILE;\r\n    }\r\n\r\n    addProbability(): void {\r\n        this.holeProbability += 2;\r\n        this.movingProbability += 2;\r\n        this.smashingProbability += 2;\r\n    }\r\n\r\n    calcGemcalProbability(): boolean {\r\n        let pr = rnd(1, 100);\r\n        if (pr <= this.gemProbability) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    addGem(obj: Laya.Sprite3D) {\r\n        let pr = this.calcGemcalProbability();\r\n        if (pr) {\r\n            let gem: Laya.Sprite3D = Laya.Pool.getItemByCreateFun(\"gem\", this.createGem, this);\r\n            obj.addChild(gem);\r\n            let target = new Laya.Vector3(0, -0.1, 0.06);\r\n            gem.transform.localPosition = target;\r\n            gem.addComponent(Gem);\r\n        }\r\n    }\r\n\r\n    downTileIndex: number = 0;\r\n    fallDownSpan: number = 200;\r\n    startFall: boolean = false;\r\n    needBuild: boolean = false;\r\n    startFallDown() {\r\n        this.startFall = true;\r\n        if (this.needBuild) {\r\n            this.resetMap();\r\n        } else {\r\n            Laya.timer.once(this.fallDownSpan, this, this.tileDown, null, false);\r\n        }\r\n        \r\n    }\r\n\r\n    stopFallDown() {\r\n        this.needBuild = true;\r\n        this.startFall = false;\r\n        Laya.timer.clear(this, this.tileDown);\r\n    }\r\n\r\n    tileDown() {\r\n        if (!this.startFall) {\r\n            return;\r\n        }\r\n        for (let i = 0; i < this.tileList[this.downTileIndex].length; i++) {\r\n            let obj = this.tileList[this.downTileIndex][i];\r\n            let rb: Laya.Rigidbody3D = obj.getComponent(Laya.Rigidbody3D)\r\n            rb = !rb ? obj.addComponent(Laya.Rigidbody3D) : rb;\r\n            let boxShape: Laya.BoxColliderShape = new Laya.BoxColliderShape(this.tileWidth, this.tileWidth, this.tileWidth);\r\n            rb.colliderShape = boxShape;\r\n            let num = rnd(1, 10);\r\n            rb.angularVelocity = new Laya.Vector3(rnd(0, 1) * num, rnd(0, 1) * num, rnd(0, 1) * num);\r\n            rb.gravity = new Laya.Vector3(0,-10,0);\r\n            let spike: Spike = obj.getComponent(Spike);\r\n            if (spike) {\r\n                spike.stop();\r\n            }\r\n            this.destroyItem(obj);\r\n        }\r\n\r\n        if (this.playerController.z == this.downTileIndex) {\r\n            this.stopFallDown();\r\n            this.playerController.fallDown();\r\n        }\r\n        this.tileList[this.downTileIndex].length = 0;\r\n        this.downTileIndex++;\r\n        Laya.timer.once(this.fallDownSpan, this, this.tileDown, null, false);\r\n    }\r\n\r\n    async destroyItem(item: Laya.Sprite3D, now: boolean = false) {\r\n        if (!now) {\r\n            await sleep(1000);\r\n        }\r\n        if (item.displayedInStage) {\r\n            item.removeSelf();\r\n            let rb = item.getComponent(Laya.Rigidbody3D) as Laya.Rigidbody3D;\r\n            if (rb) {\r\n                rb.angularVelocity = new Laya.Vector3();\r\n                rb.gravity = new Laya.Vector3();\r\n                rb.colliderShape = null;\r\n            }\r\n            let spike = item.getComponent(Spike) as Spike;\r\n            if (spike) {\r\n                spike.resetFloor();\r\n            }\r\n            let child = item.getChildByName(\"gem\");\r\n            if (child) {\r\n                child.removeSelf();\r\n                Laya.Pool.recover(child.name, child);\r\n            }\r\n            Laya.Pool.recover(item.name, item);\r\n        }\r\n    }\r\n}", "import { sleep } from \"../utils\";\r\nimport Gem from \"./Gem\";\r\nimport MapManager from \"./MapManager\";\r\n\r\nexport default class PlayerController extends Laya.Script3D {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public z: number = 5;\r\n    public x: number = 2;\r\n    deepColor: Laya.Vector4 = new Laya.Vector4(122 / 255, 85 / 255, 179 / 255, 1);\r\n    floorColor: Laya.Vector4 = new Laya.Vector4(126 / 255, 93 / 255, 183 / 255, 1);\r\n    map: MapManager;\r\n    scene: Laya.Scene3D;\r\n    live: boolean = true;\r\n    characterCtrl: Laya.CharacterController\r\n    onEnable(): void {\r\n        // window.addEventListener(\"keydown\", this.onKeyDown.bind(this));\r\n        Laya.stage.on(\"move\", this, this.move)\r\n    }\r\n    createRole() {\r\n        if (!this.characterCtrl) {\r\n            this.characterCtrl = this.owner.addComponent(Laya.CharacterController);\r\n        }\r\n        let boxShape: Laya.BoxColliderShape = new Laya.BoxColliderShape(0.2, 0.2, 0.2);\r\n        this.characterCtrl.colliderShape = boxShape;\r\n        this.characterCtrl.gravity = new Laya.Vector3(0, 0, 0);\r\n        this.updatePlayerPosition();\r\n    }\r\n\r\n    setMap(map: MapManager) {\r\n        this.map = map;\r\n    }\r\n\r\n    resetStatus() {\r\n        // this.characterCtrl.gravity = new Laya.Vector3(0, 0, 0);\r\n        this.z = 5;\r\n        this.x = 2;\r\n        // this.updatePlayerPosition();\r\n\r\n        this.createRole();\r\n        this.live = true;\r\n    }\r\n\r\n    move(keyCode: string): void {\r\n        if (!this.live) {\r\n            return;\r\n        }\r\n        if (keyCode == \"right\") { // right\r\n            if (this.x != 0) {\r\n                this.z++;\r\n            }\r\n            if (this.z % 2 == 1 && this.x != 0) {\r\n                this.x--;\r\n            }\r\n            this.updatePlayerPosition();\r\n            this.calcPosition();\r\n        } else if (keyCode == \"left\") { // left\r\n            if (this.x != 4 || this.z % 2 != 1) {\r\n                this.z++;\r\n            }\r\n            if (this.z % 2 == 0 && this.x != 4) {\r\n                this.x++;\r\n            }\r\n            this.updatePlayerPosition();\r\n            this.calcPosition();\r\n        }\r\n    }\r\n\r\n    updatePlayerPosition() {\r\n        if (this.live) {\r\n            Laya.stage.event(\"MoveCamera\");\r\n        }\r\n        let tile = this.map.tileList[this.z][this.x];\r\n        let position = new Laya.Vector3();\r\n        let transform = tile.transform;\r\n        let floor = tile.getChildByName(\"normal_a2\") as Laya.MeshSprite3D;\r\n        if (floor) { // \u8717\u725B\u75D5\u8FF9\r\n            (floor.meshRenderer.material as Laya.BlinnPhongMaterial).albedoColor = this.z % 2 == 0 ? this.deepColor : this.floorColor;\r\n        } else {\r\n            this.fallDown();\r\n        }\r\n        Laya.Vector3.add(transform.position, new Laya.Vector3(0, this.map.tileWidth / 2, 0), position);\r\n        (this.owner as Laya.Sprite3D).transform.position = position;\r\n        (this.owner as Laya.Sprite3D).transform.rotation = transform.rotation;\r\n        (this.owner as Laya.Sprite3D).transform.localRotationEulerX = 0;\r\n    }\r\n\r\n    calcPosition() {\r\n        let tileListCount = this.map.tileList.length;\r\n        if (tileListCount - this.z <= 15) {\r\n            this.map.addProbability();\r\n            let offsetZ = this.map.tileList[tileListCount - 1][0].transform.localPositionZ + this.map.halfDistance;\r\n            this.map.createMapItem(offsetZ);\r\n        }\r\n    }\r\n\r\n    onCollisionEnter(Collision: Laya.Collision): void {\r\n        let obj = Collision.other.owner.name;\r\n        if (obj == \"moving_spikes_b\" || obj == \"smashing_spikes_b\") {\r\n            this.live = false;\r\n            this.gameOver();\r\n        } else if (obj == \"gem 3\") {\r\n            Collision.other.owner.parent.getComponent(Gem).destroy();\r\n            Laya.stage.event(\"updateScore\");\r\n        }\r\n    }\r\n\r\n    async fallDown() {\r\n        this.characterCtrl.gravity = new Laya.Vector3(0, -10, 0);\r\n        this.live = false;\r\n        await sleep(800);\r\n        this.characterCtrl.colliderShape = null;\r\n        this.gameOver();\r\n    }\r\n\r\n    gameOver() {\r\n        Laya.timer.pause();\r\n        Laya.timer.scale = 0;\r\n        Laya.stage.event(\"over\");\r\n    }\r\n\r\n}", "import UIManager from \"../UIManager\";\r\nimport { rnd } from \"../utils\";\r\nimport CameraFollow from \"./CameraFollow\";\r\nimport MapManager from \"./MapManager\";\r\nimport PlayerController from \"./PlayerController\";\r\n\r\n\r\nexport default class App {\r\n    constructor() {\r\n        UIManager.ins.init();\r\n        this.PreloadingRes();\r\n     }\r\n\r\n    cubeName: string;\r\n    PreloadingRes() {\r\n        let cubes = [\"books\", \"bread\", \"brick\", \"cake\", \"car\", \"cheese\", \"dice\", \"fruit\", \"hamburger\", \"icecube\", \"jar\", \"mushroom\", \"pilis\", \"safe\", \"sushi\", \"toster\", \"watermelon\"];\r\n        this.cubeName = cubes[rnd(0, cubes.length - 1)];\r\n        //\u9884\u52A0\u8F7D\u6240\u6709\u8D44\u6E90\r\n        var resource: Array<string> = [\r\n            `./res/3dScene/cube/Conventional/cube_${this.cubeName}.lh`,\r\n            \"./res/3dScene/tile/Conventional/tile.lh\",\r\n            \"./res/3dScene/moving_spikes/Conventional/moving_spikes.lh\",\r\n            \"./res/3dScene/smashing_spikes/Conventional/smashing_spikes.lh\",\r\n            \"./res/3dScene/wall/Conventional/wall.lh\",\r\n            \"./res/3dScene/gem/Conventional/gem.lh\"\r\n        ];\r\n        Laya.loader.create(resource, Laya.Handler.create(this, this.onPreLoadFinish));\r\n    }\r\n\r\n    onPreLoadFinish() {\r\n        Laya.Scene3D.load(\"res/3dScene/LayaScene_Main/Conventional/Main.ls\", Laya.Handler.create(this, this.onLoaded));\r\n    }\r\n\r\n    onLoaded(scene: Laya.Scene3D) {\r\n        console.time(\"start\");\r\n        Laya.stage.addChild(scene);\r\n        scene.zOrder = -1;\r\n        this.start(scene);\r\n    }\r\n\r\n    start(scene: Laya.Scene3D) {\r\n        let cube = Laya.loader.getRes(`./res/3dScene/cube/Conventional/cube_${this.cubeName}.lh`);\r\n\r\n        let player: Laya.Sprite3D = Laya.Sprite3D.instantiate(cube, scene);\r\n        let playerController:PlayerController = player.addComponent(PlayerController);\r\n        let platform = scene.getChildByName(\"Platform\") as Laya.Sprite3D;\r\n        let map: MapManager = platform.addComponent(MapManager);\r\n        let camera = scene.getChildByName(\"Main Camera\") as Laya.Sprite3D;\r\n        let cameraFollow: CameraFollow = camera.addComponent(CameraFollow);\r\n        let light = scene.getChildByName(\"Directional Light\") as Laya.DirectionLight;\r\n        light.shadowMode = Laya.ShadowMode.SoftHigh;\r\n        map.createMapItem();\r\n        map.setPlayer(playerController);\r\n\r\n        playerController.setMap(map);\r\n        playerController.createRole();\r\n        cameraFollow.setTarget(player);\r\n\r\n    }\r\n}", "import GameConfig from \"./GameConfig\";\r\nimport App from \"./script/App\"\r\nclass Main {\r\n\tconstructor() {\r\n\t\t//\u6839\u636EIDE\u8BBE\u7F6E\u521D\u59CB\u5316\u5F15\u64CE\t\t\r\n\t\tif (window[\"Laya3D\"]) Laya3D.init(GameConfig.width, GameConfig.height);\r\n\t\telse Laya.init(GameConfig.width, GameConfig.height, Laya[\"WebGL\"]);\r\n\t\tLaya[\"Physics\"] && Laya[\"Physics\"].enable();\r\n\t\tLaya[\"DebugPanel\"] && Laya[\"DebugPanel\"].enable();\r\n\t\tLaya.stage.scaleMode = GameConfig.scaleMode;\r\n\t\tLaya.stage.screenMode = GameConfig.screenMode;\r\n\t\tLaya.stage.alignV = GameConfig.alignV;\r\n\t\tLaya.stage.alignH = GameConfig.alignH;\r\n\t\t//\u517C\u5BB9\u5FAE\u4FE1\u4E0D\u652F\u6301\u52A0\u8F7Dscene\u540E\u7F00\u573A\u666F\r\n\t\tLaya.URL.exportSceneToJson = GameConfig.exportSceneToJson;\r\n\r\n\t\t//\u6253\u5F00\u8C03\u8BD5\u9762\u677F\uFF08\u901A\u8FC7IDE\u8BBE\u7F6E\u8C03\u8BD5\u6A21\u5F0F\uFF0C\u6216\u8005url\u5730\u5740\u589E\u52A0debug=true\u53C2\u6570\uFF0C\u5747\u53EF\u6253\u5F00\u8C03\u8BD5\u9762\u677F\uFF09\r\n\t\tif (GameConfig.debug || Laya.Utils.getQueryString(\"debug\") == \"true\") Laya.enableDebugPanel();\r\n\t\tif (GameConfig.physicsDebug && Laya[\"PhysicsDebugDraw\"]) Laya[\"PhysicsDebugDraw\"].enable();\r\n\t\tif (GameConfig.stat) Laya.Stat.show();\r\n\t\t// Laya.alertGlobalError(true);\r\n\r\n\t\t//\u6FC0\u6D3B\u8D44\u6E90\u7248\u672C\u63A7\u5236\uFF0Cversion.json\u7531IDE\u53D1\u5E03\u529F\u80FD\u81EA\u52A8\u751F\u6210\uFF0C\u5982\u679C\u6CA1\u6709\u4E5F\u4E0D\u5F71\u54CD\u540E\u7EED\u6D41\u7A0B\r\n\t\tLaya.ResourceVersion.enable(\"version.json\", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);\r\n\t}\r\n\r\n\tonVersionLoaded(): void {\r\n\t\t//\u6FC0\u6D3B\u5927\u5C0F\u56FE\u6620\u5C04\uFF0C\u52A0\u8F7D\u5C0F\u56FE\u7684\u65F6\u5019\uFF0C\u5982\u679C\u53D1\u73B0\u5C0F\u56FE\u5728\u5927\u56FE\u5408\u96C6\u91CC\u9762\uFF0C\u5219\u4F18\u5148\u52A0\u8F7D\u5927\u56FE\u5408\u96C6\uFF0C\u800C\u4E0D\u662F\u5C0F\u56FE\r\n\t\tLaya.AtlasInfoManager.enable(\"fileconfig.json\", Laya.Handler.create(this, this.onConfigLoaded));\r\n\t}\r\n\r\n\tonConfigLoaded(): void {\r\n\t\tthis.loadUIRes();\r\n\t\t//\u52A0\u8F7DIDE\u6307\u5B9A\u7684\u573A\u666F\r\n\t\tGameConfig.startScene && Laya.Scene.open(GameConfig.startScene);\r\n\r\n\t}\r\n\r\n\tloadUIRes(){\r\n\t\tfgui.UIPackage.loadPackage(\"res/fui/home\", Laya.Handler.create(this, this.onUILoaded));\r\n\t}\r\n\r\n\tonUILoaded(){\r\n\t\tnew App();\r\n\t}\r\n}\r\n//\u6FC0\u6D3B\u542F\u52A8\u7C7B\r\nnew Main();\r\n"],
  "mappings": "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",
  "names": []
}
