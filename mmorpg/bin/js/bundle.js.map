{
  "version": 3,
  "sources": ["../../src/Enum.ts", "../../src/GameConfig.ts", "../../src/MapGrid.ts", "../../src/MapTile.ts", "../../src/WorldMap.ts", "../../src/Camera2D.ts", "../../src/Utils.ts", "../../src/SceneManager.ts", "../../src/Player.ts", "../../src/InputManager.ts", "../../src/App.ts", "../../src/Main.ts"],
  "sourcesContent": ["export enum LayerEnum {\r\n    MapLayer,\r\n    ActorLayer,\r\n    EffectLayer\r\n}", "/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */\r\n/*\r\n* \u6E38\u620F\u521D\u59CB\u5316\u914D\u7F6E;\r\n*/\r\nexport default class GameConfig{\r\n    static width:number=750;\r\n    static height:number=1334;\r\n    static scaleMode:string=\"noscale\";\r\n    static screenMode:string=\"none\";\r\n    static alignV:string=\"top\";\r\n    static alignH:string=\"left\";\r\n    static startScene:any=\"test/TestScene.scene\";\r\n    static sceneRoot:string=\"\";\r\n    static debug:boolean=false;\r\n    static stat:boolean=false;\r\n    static physicsDebug:boolean=false;\r\n    static exportSceneToJson:boolean=true;\r\n    constructor(){}\r\n    static init(){\r\n        var reg: Function = Laya.ClassUtils.regClass;\r\n    }\r\n}\r\nGameConfig.init();", "export default class MapGrid {\r\n    public gridWidth: number = 6000;\r\n    public gridHeight: number = 6000;\r\n    public cellWidth: number = 300;\r\n    public cellHeight: number = 300;\r\n\r\n    public col: number = 20;\r\n    public row: number = 20;\r\n}", "export default class MapTile {\r\n    private _row: number;\r\n    private _col: number;\r\n    private _resUrl: string;\r\n    private _isLoaded: boolean = false;\r\n    private _isLoading: boolean = false;\r\n    private _displayobject: Laya.Sprite;\r\n    private _parent: Laya.Sprite;\r\n    constructor(row: number, col: number, parent: Laya.Sprite) {\r\n        this._row = row;\r\n        this._col = col;\r\n        this._parent = parent;\r\n        this._resUrl = `./res/map_001/${this._row}_${this._col}.jpg`;\r\n        this._displayobject = new Laya.Sprite();\r\n    }\r\n\r\n    private _handler:Laya.Handler;\r\n    loadTile(): void {\r\n        this._handler = Laya.Handler.create(this, this.onLoaded);\r\n        this._isLoading = true;\r\n        Laya.loader.load(this._resUrl, this._handler);\r\n    }\r\n\r\n    onLoaded() {\r\n        if (this._handler){\r\n            this._handler.recover();\r\n        }\r\n        this._isLoaded = true;\r\n        this._isLoading = false;\r\n        let texture = Laya.loader.getRes(this._resUrl);\r\n        this._displayobject.graphics.drawTexture(texture,0,0);\r\n        this._displayobject.x = this._col * 300;\r\n        this._displayobject.y = this._row * 300;\r\n        this._parent.addChild(this._displayobject);\r\n    }\r\n\r\n    unLoadTile(): void {\r\n        this._displayobject.graphics.clear();\r\n        if(this._isLoading){\r\n            Laya.loader.cancelLoadByUrl(this._resUrl);\r\n            this._isLoading =false;\r\n        }else{\r\n            Laya.loader.clearRes(this._resUrl)\r\n        }\r\n        this._isLoaded = false;\r\n        this._parent.removeChild(this._displayobject);\r\n    }\r\n}", "import GameConfig from \"./GameConfig\";\r\nimport MapGrid from \"./MapGrid\";\r\nimport MapTile from \"./MapTile\";\r\nimport SceneManager from \"./SceneManager\";\r\n\r\nexport default class WorldMap {\r\n    private _container: Laya.Sprite = new Laya.Sprite();\r\n    get container(): Laya.Sprite {\r\n        return this._container;\r\n    }\r\n    private _grid: MapGrid = new MapGrid();\r\n    public get grid(): MapGrid {\r\n        return this._grid;\r\n    }\r\n    private _gridTiles: MapTile[][] = [];\r\n    public get gridTiles(): MapTile[][] {\r\n        return this._gridTiles;\r\n    }\r\n\r\n    private static _ins: WorldMap;\r\n    public static get ins(): WorldMap {\r\n        if (this._ins == null) {\r\n            this._ins = new WorldMap();\r\n        }\r\n        return this._ins;\r\n    }\r\n\r\n    private constructor() {\r\n        if (WorldMap._ins) {\r\n            throw \"singleton class is not use new constructor!\";\r\n        }\r\n        this.init();\r\n    }\r\n\r\n    public init(): void {\r\n        this._createTiles();\r\n    }\r\n\r\n    private _createTiles() {\r\n        for (let col = 0; col < this._grid.col; col++) {\r\n            this._gridTiles[col] = [];\r\n            for (let row = 0; row < this._grid.row; row++) {\r\n                this._gridTiles[col][row] = new MapTile(row, col, this._container);\r\n            }\r\n        }\r\n    }\r\n\r\n    public getNeedLoadTile(x: number, y: number): { [key: string]: string } {\r\n        let cellWidth = this.grid.cellWidth;\r\n        let cellHeight = this.grid.cellHeight;\r\n        if (y < cellHeight){\r\n            debugger;\r\n        }\r\n        let rect = new Laya.Rectangle(x - cellWidth, y - cellHeight, GameConfig.width + cellWidth, GameConfig.height + cellHeight);\r\n        \r\n        let p1: Laya.Point = this.scenePosToGrid(rect.x, rect.y);\r\n        let p2: Laya.Point = this.scenePosToGrid(rect.right, rect.bottom); // needload\r\n        let loadMap: { [key: string]: string } = {};\r\n        for (let i = p1.x; i <= p2.x; i++) {\r\n            for (let j = p1.y; j <= p2.y; j++) {\r\n                let item = `${i}_${j}`;\r\n                loadMap[item] = item;\r\n            }\r\n        }\r\n        return loadMap;\r\n    }\r\n\r\n    public scenePosToGrid(x: number, y: number): Laya.Point {\r\n        let p = new Laya.Point();\r\n        p.x = Math.floor(x / this._grid.cellWidth);\r\n        p.y = Math.floor(y / this._grid.cellHeight);\r\n        return p;\r\n    }\r\n\r\n    private _loadedTile: { [key: string]: string } = {};\r\n    public loadTiles(tiles: { [key: string]: string }) {\r\n        let col: number, row: number, idxArr: string[];\r\n\r\n        // unload\r\n        for (let key in this._loadedTile){\r\n            if(!tiles[key]){\r\n                idxArr = key.split(\"_\");\r\n                col = +idxArr[0];\r\n                row = +idxArr[1];\r\n                this._gridTiles[col][row].unLoadTile();\r\n                delete this._loadedTile[key];\r\n            }\r\n        }\r\n\r\n        for (let key in tiles) {\r\n            idxArr = key.split(\"_\");\r\n            col = +idxArr[0];\r\n            row = +idxArr[1];\r\n            if (!this._loadedTile[key]) {\r\n                if (col < this.grid.col && row < this.grid.row) {\r\n                    this._gridTiles[col][row].loadTile();\r\n                    this._loadedTile[key] = key;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public update(){\r\n        let cameraView = SceneManager.ins.camera2d.cameraView;\r\n        let tiles = this.getNeedLoadTile(cameraView.x,cameraView.y);\r\n        this.loadTiles(tiles);\r\n    }\r\n\r\n}", "import GameConfig from \"./GameConfig\";\r\nimport WorldMap from \"./WorldMap\";\r\n\r\nexport default class Camera2D {\r\n    private _cameraView: Laya.Rectangle;\r\n    private _scene: Laya.Sprite;\r\n    public get cameraView(): Laya.Rectangle {\r\n        return this._cameraView;\r\n    }\r\n\r\n    constructor(scene: Laya.Sprite) {\r\n        this._scene = scene;\r\n        this._cameraView = new Laya.Rectangle(0, 0, GameConfig.width, GameConfig.height);\r\n        this._scene.scrollRect = this.cameraView;\r\n    }\r\n\r\n    private _focusTarget: Laya.Sprite;\r\n    public focus(target: Laya.Sprite): void {\r\n        this._focusTarget = target;\r\n        this._cameraView.x = this._focusTarget.x - (GameConfig.width >> 1);\r\n        this._cameraView.y = this._focusTarget.y - (GameConfig.height >> 1);\r\n    }\r\n\r\n    private _targetPos: Laya.Point = new Laya.Point();\r\n    private _ease: number = 0.0025;\r\n    public update(): void {\r\n        if (this._focusTarget) {\r\n            let halfWidth = GameConfig.width >> 1,\r\n                halfHeight = GameConfig.height >> 1;\r\n            this._targetPos.x = this._focusTarget.x - halfWidth;\r\n            this._targetPos.y = this._focusTarget.y - halfHeight;\r\n\r\n            if (this._focusTarget.x + halfWidth < WorldMap.ins.grid.gridWidth &&\r\n                this._focusTarget.x - halfWidth > 0) {\r\n                this._cameraView.x += (this._targetPos.x - this._cameraView.x) * Laya.timer.delta * this._ease;\r\n            }\r\n            if (this._focusTarget.y + halfHeight < WorldMap.ins.grid.gridHeight &&\r\n                this._focusTarget.y - halfHeight > 0) {\r\n                this._cameraView.y += (this._targetPos.y - this._cameraView.y) * Laya.timer.delta * this._ease;\r\n            }\r\n        }\r\n    }\r\n}", "export const angleToRandin = (angle: number): number => {\r\n    return angle * Math.PI / 180;\r\n}\r\n\r\nexport const randinToAngle = (randin: number): number => {\r\n    return randin * 180 / Math.PI;\r\n}\r\n\r\n/**\r\n         * \u8F6C\u63622D\u5C4F\u5E55\u5750\u6807\u7CFB\u7EDF\u52303D\u6295\u5F71\u5750\u6807\u7CFB\u7EDF\uFF08\u4EC5\u9650\u4E8E\u6B63\u4EA4\u6295\u5F71\uFF09\r\n         * @param\tsource \u6E90\u5750\u6807\u3002\r\n         * @param\tout \u8F93\u51FA\u5750\u6807\u3002\r\n         */\r\nexport const screenCoordTo3DCoord = (source: Laya.Vector3, out: Laya.Vector3,screenWidth:number,screenHeight:number): void=> {\r\n    out.x = ((-screenWidth >> 1) + source.x) * window.devicePixelRatio;\r\n    out.y = ((screenHeight >> 1) - source.y) * window.devicePixelRatio;\r\n    out.z = source.z;\r\n}", "import Camera2D from \"./Camera2D\";\r\nimport { LayerEnum } from \"./Enum\";\r\nimport GameConfig from \"./GameConfig\";\r\nimport { angleToRandin } from \"./Utils\";\r\nimport WorldMap from \"./WorldMap\";\r\n\r\nexport default class SceneManager {\r\n    private static _ins: SceneManager;\r\n    public static get ins(): SceneManager {\r\n        if (this._ins == null) {\r\n            this._ins = new SceneManager();\r\n        }\r\n        return this._ins;\r\n    }\r\n\r\n    private constructor() {\r\n        if (SceneManager._ins) {\r\n            throw \"singleton class is not use new constructor!\";\r\n        }\r\n    }\r\n\r\n    private _scene: Laya.Sprite;\r\n    public get scene(): Laya.Sprite {\r\n        return this._scene;\r\n    }\r\n    private _scene3d: Laya.Scene3D;\r\n    private _layerMap: Laya.Sprite;\r\n    public get scene3d(): Laya.Sprite {\r\n        return this._scene3d;\r\n    }\r\n    private _layerActor: Laya.Sprite;\r\n    private _layerEffect: Laya.Sprite;\r\n    private _layerDic: Map<LayerEnum, Laya.Sprite> = new Map();\r\n    private _camera2d: Camera2D;\r\n    private _camera3d: Laya.Camera;\r\n    public get camera3d():Laya.Camera{\r\n        return this._camera3d;\r\n    }\r\n    private _container3d: Laya.Sprite3D = new Laya.Sprite3D();\r\n    public get container3d(): Laya.Sprite3D{\r\n        return this._container3d;\r\n    }\r\n    get camera2d(): Camera2D {\r\n        return this._camera2d;\r\n    }\r\n\r\n    public init(): void {\r\n        this.init2d();\r\n        this.init3d();\r\n    }\r\n\r\n    public init2d(): void {\r\n        this._layerMap = new Laya.Sprite();\r\n        this._layerMap.name = \"layerMap\";\r\n        this._layerActor = new Laya.Sprite();\r\n        this._layerActor.name = \"layerActor\";\r\n        this._layerEffect = new Laya.Sprite();\r\n        this._layerEffect.name = \"layerEffect\";\r\n        this._scene = new Laya.Sprite();\r\n        this._scene.name = \"scene\";\r\n        this._camera2d = new Camera2D(this._scene);\r\n\r\n        this._scene.addChild(this._layerMap);\r\n        this._scene.addChild(this._layerActor);\r\n        this._scene.addChild(this._layerEffect);\r\n\r\n        this._layerDic.set(LayerEnum.MapLayer, this._layerMap);\r\n        this._layerDic.set(LayerEnum.ActorLayer, this._layerActor);\r\n        this._layerDic.set(LayerEnum.EffectLayer, this._layerEffect);\r\n\r\n        Laya.stage.addChild(this._scene);\r\n    }\r\n\r\n    public init3d(): void {\r\n        this._scene3d = Laya.stage.addChild(new Laya.Scene3D()) as Laya.Scene3D;\r\n        this._scene3d.addChild(this._container3d);\r\n        this._container3d.transform.rotationEuler = new Laya.Vector3(angleToRandin(30));\r\n        this._camera3d = new Laya.Camera(10, 0.1, 300);\r\n        this._scene3d.addChild(this._camera3d);\r\n        this._camera3d.transform.translate(new Laya.Vector3(0, 0, 150));\r\n        this._camera3d.orthographic = true;\r\n        this._camera3d.orthographicVerticalSize = 10;\r\n        this._camera3d.clearFlag = Laya.CameraClearFlags.SolidColor;\r\n        this._camera3d.clearColor = new Laya.Vector4(0.0, 0.0, 0.0, 0.0);\r\n        var renderTexture = new Laya.RenderTexture(GameConfig.width, GameConfig.height, Laya.RenderTextureFormat.R8G8B8A8, Laya.RenderTextureDepthFormat.DEPTHSTENCIL_NONE);\r\n        this._camera3d.renderTarget = renderTexture;\r\n        this._camera3d.orthographicVerticalSize = 10;\r\n        this._camera3d.aspectRatio = 0;\r\n        var scene3DImage = new Laya.Image();\r\n        scene3DImage.source = new Laya.Texture(renderTexture);\r\n        Laya.stage.addChild(scene3DImage);\r\n\r\n        // Laya.Sprite3D.load(\"./res/3dScene/cike/Conventional/Main Camera.lh\",\r\n        //     Laya.Handler.create(this, (camera: Laya.Sprite3D) => {\r\n        //         this._camera3d = this._scene3d.addChild(camera) as Laya.Camera;\r\n        //         var renderTexture = new Laya.RenderTexture(512, 512, Laya.RenderTextureFormat.R8G8B8A8, Laya.RenderTextureDepthFormat.DEPTHSTENCIL_NONE);\r\n        //         this._camera3d.renderTarget = renderTexture;\r\n                // this._camera3d.clearFlag =Laya.BaseCamera.CLEARFLAG_SOLIDCOLOR;    \r\n                // this._camera3d.clearColor = new Laya.Vector4(0, 0, 0, 0);\r\n                // console.log(this._camera3d.clearColor);\r\n            // }))\r\n\r\n        // Laya.Sprite3D.load(\"./res/3dScene/cike/Conventional/cike.lh\", Laya.Handler.create(this, (sprite: Laya.Sprite3D) => {\r\n        //     Laya.Sprite3D.load(\"./res/3dScene/cike/Conventional/Main Camera.lh\",\r\n        //         Laya.Handler.create(this, (camera: Laya.Sprite3D) => {\r\n        //             this._camera3d = this._scene3d.addChild(camera) as Laya.Camera;\r\n        //             // sprite.transform.rotate(new Laya.Vector3(0, 180, 0), true, false);\r\n        //             this._scene3d.addChild(sprite);\r\n        //         }))\r\n        // }))\r\n    }\r\n\r\n    public addToLayer(sprite: Laya.Sprite, layer: LayerEnum, x: number = 0, y: number = 0) {\r\n        let layerSprite = this._layerDic.get(layer);\r\n        if (layerSprite) {\r\n            layerSprite.addChild(sprite);\r\n            sprite.x = x;\r\n            sprite.y = y;\r\n        } else {\r\n            console.warn(\"can't find layer: \" + layer);\r\n        }\r\n    }\r\n\r\n    getMousePos(): Laya.Point {\r\n        if (this._scene) {\r\n            return new Laya.Point(this._scene.mouseX, this._scene.mouseY);\r\n        } else {\r\n            return new Laya.Point();\r\n        }\r\n    }\r\n\r\n    update() {\r\n        if (this._camera2d) {\r\n            this._camera2d.update();\r\n        }\r\n        WorldMap.ins.update();\r\n    }\r\n}", "import GameConfig from \"./GameConfig\";\r\nimport SceneManager from \"./SceneManager\";\r\nimport { screenCoordTo3DCoord } from \"./Utils\";\r\n\r\nexport default class Player {\r\n    private _displayerObject: Laya.Sprite;\r\n    public get displayObject(): Laya.Sprite {\r\n        return this._displayerObject;\r\n    };\r\n    private static _ins: Player;\r\n    public static get ins(): Player {\r\n        if (this._ins == null) {\r\n            this._ins = new Player();\r\n        }\r\n        return this._ins;\r\n    }\r\n\r\n    private constructor() {\r\n        if (Player._ins) {\r\n            throw \"singleton class is not use new constructor!\";\r\n        }\r\n        this._displayerObject = new Laya.Sprite();\r\n        let child = Laya.Sprite.fromImage(\"./res/player.png\");\r\n        this.displayObject.addChild(child);\r\n        child.x -= 48;\r\n        child.y -= 48;\r\n\r\n        this.create3dObject();\r\n    }\r\n\r\n    private _moveTween: Laya.Tween;\r\n    moveTo(position: Laya.Point) {\r\n        if (this._moveTween) {\r\n            this._moveTween.clear();\r\n        }\r\n        this._moveTween = Laya.Tween.to(this._displayerObject, {\r\n            x: position.x,\r\n            y: position.y,\r\n        }, 1000);\r\n    }\r\n\r\n    private _displayerObject3d: Laya.Sprite3D;\r\n\r\n    create3dObject(): void {\r\n        Laya.Sprite3D.load(\"./res/3dScene/cike/Conventional/cike.lh\", Laya.Handler.create(this, (sprite: Laya.Sprite3D) => {\r\n            this._displayerObject3d = SceneManager.ins.container3d.addChild(sprite) as Laya.Sprite3D;\r\n            this._displayerObject3d.transform.rotate(new Laya.Vector3(0, 180, 0), true, false);\r\n            this._displayerObject3d.transform.localScale = new Laya.Vector3(0.05,0.05,0.05);\r\n        }))\r\n    }\r\n\r\n    update() {\r\n        if (this._displayerObject3d) {\r\n            let pos = this.getGlobalVec3()\r\n            let transform = new Laya.Vector3();\r\n            SceneManager.ins.camera3d.convertScreenCoordToOrthographicCoord(pos,transform);\r\n            // screenCoordTo3DCoord(pos, transform,GameConfig.width,GameConfig.height);\r\n            this._displayerObject3d.transform.position = transform;\r\n        }\r\n    }\r\n\r\n    public getGlobalVec3():Laya.Vector3{\r\n        let pos =new Laya.Vector3();\r\n        let point = SceneManager.ins.scene.localToGlobal(new Laya.Point(this._displayerObject.x, this._displayerObject.y));\r\n        pos.x = point.x;\r\n        pos.y = point.y;\r\n        return pos;\r\n    }\r\n}", "import Player from \"./Player\";\r\nimport SceneManager from \"./SceneManager\";\r\n\r\nexport default class InputManager {\r\n    private static _ins: InputManager;\r\n    public static get ins(): InputManager {\r\n        if (this._ins == null) {\r\n            this._ins = new InputManager();\r\n        }\r\n        return this._ins;\r\n    }\r\n\r\n    private constructor() {\r\n        if (InputManager._ins) {\r\n            throw \"singleton class is not use new constructor!\";\r\n        }\r\n    }\r\n\r\n    public init() {\r\n        Laya.stage.on(Laya.Event.MOUSE_DOWN, this, this.mouseHandler);\r\n    }\r\n\r\n    private mouseHandler(e:Laya.Event) {\r\n        let pos: Laya.Point = SceneManager.ins.getMousePos();\r\n        console.log(pos);\r\n        Player.ins.moveTo(pos);\r\n    }\r\n}", "import { LayerEnum } from \"./Enum\";\r\nimport InputManager from \"./InputManager\";\r\nimport Player from \"./Player\";\r\nimport SceneManager from \"./SceneManager\";\r\nimport WorldMap from \"./WorldMap\";\r\n\r\nexport default class App{\r\n    constructor(){\r\n        this.init()\r\n    }\r\n\r\n    init(){\r\n        SceneManager.ins.init();\r\n        SceneManager.ins.addToLayer(WorldMap.ins.container, LayerEnum.MapLayer);\r\n        SceneManager.ins.addToLayer(Player.ins.displayObject, LayerEnum.ActorLayer,1024,1024);\r\n\r\n        SceneManager.ins.camera2d.focus(Player.ins.displayObject);\r\n        InputManager.ins.init();\r\n\r\n        Laya.timer.frameLoop(1,this,this.update);\r\n\r\n    }\r\n\r\n    update(){\r\n        SceneManager.ins.update();\r\n        Player.ins.update();\r\n    }\r\n}", "import App from \"./App\";\r\nimport GameConfig from \"./GameConfig\";\r\nclass Main {\r\n\tconstructor() {\r\n\t\tlet config3D = new Config3D();\r\n\t\tconfig3D.isAlpha = true;\r\n\t\t//\u6839\u636EIDE\u8BBE\u7F6E\u521D\u59CB\u5316\u5F15\u64CE\t\t\r\n\t\tif (window[\"Laya3D\"]) Laya3D.init(GameConfig.width, GameConfig.height);\r\n\t\telse Laya.init(GameConfig.width, GameConfig.height, Laya[\"WebGL\"]);\r\n\r\n\t\tLaya[\"Physics\"] && Laya[\"Physics\"].enable();\r\n\t\tLaya[\"DebugPanel\"] && Laya[\"DebugPanel\"].enable();\r\n\t\tLaya.stage.scaleMode = GameConfig.scaleMode;\r\n\t\tLaya.stage.screenMode = GameConfig.screenMode;\r\n\t\tLaya.stage.alignV = GameConfig.alignV;\r\n\t\tLaya.stage.alignH = GameConfig.alignH;\r\n\t\tLaya.stage.bgColor = null;\r\n\t\t//\u517C\u5BB9\u5FAE\u4FE1\u4E0D\u652F\u6301\u52A0\u8F7Dscene\u540E\u7F00\u573A\u666F\r\n\t\tLaya.URL.exportSceneToJson = GameConfig.exportSceneToJson;\r\n\r\n\t\t//\u6253\u5F00\u8C03\u8BD5\u9762\u677F\uFF08\u901A\u8FC7IDE\u8BBE\u7F6E\u8C03\u8BD5\u6A21\u5F0F\uFF0C\u6216\u8005url\u5730\u5740\u589E\u52A0debug=true\u53C2\u6570\uFF0C\u5747\u53EF\u6253\u5F00\u8C03\u8BD5\u9762\u677F\uFF09\r\n\t\tif (GameConfig.debug || Laya.Utils.getQueryString(\"debug\") == \"true\") Laya.enableDebugPanel();\r\n\t\tif (GameConfig.physicsDebug && Laya[\"PhysicsDebugDraw\"]) Laya[\"PhysicsDebugDraw\"].enable();\r\n\t\tif (GameConfig.stat) Laya.Stat.show();\r\n\t\tLaya.alertGlobalError(true);\r\n\r\n\t\t//\u6FC0\u6D3B\u8D44\u6E90\u7248\u672C\u63A7\u5236\uFF0Cversion.json\u7531IDE\u53D1\u5E03\u529F\u80FD\u81EA\u52A8\u751F\u6210\uFF0C\u5982\u679C\u6CA1\u6709\u4E5F\u4E0D\u5F71\u54CD\u540E\u7EED\u6D41\u7A0B\r\n\t\tLaya.ResourceVersion.enable(\"version.json\", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);\r\n\t}\r\n\r\n\tonVersionLoaded(): void {\r\n\t\t//\u6FC0\u6D3B\u5927\u5C0F\u56FE\u6620\u5C04\uFF0C\u52A0\u8F7D\u5C0F\u56FE\u7684\u65F6\u5019\uFF0C\u5982\u679C\u53D1\u73B0\u5C0F\u56FE\u5728\u5927\u56FE\u5408\u96C6\u91CC\u9762\uFF0C\u5219\u4F18\u5148\u52A0\u8F7D\u5927\u56FE\u5408\u96C6\uFF0C\u800C\u4E0D\u662F\u5C0F\u56FE\r\n\t\tLaya.AtlasInfoManager.enable(\"fileconfig.json\", Laya.Handler.create(this, this.onConfigLoaded));\r\n\t}\r\n\r\n\tonConfigLoaded(): void {\r\n\t\t//\u52A0\u8F7DIDE\u6307\u5B9A\u7684\u573A\u666F\r\n\t\t// GameConfig.startScene && Laya.Scene.open(GameConfig.startScene);\r\n\t\tnew App();\r\n\t}\r\n}\r\n//\u6FC0\u6D3B\u542F\u52A8\u7C7B\r\nnew Main();\r\n"],
  "mappings": "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",
  "names": []
}
